

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Mar 12 22:15:39 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 09/04/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0018                     _RCSTAbits	set	24
   458  0013                     _SSPBUF	set	19
   459  0014                     _SSPCON	set	20
   460  0019                     _TXREG	set	25
   461  0009                     _PORTE	set	9
   462  0008                     _PORTD	set	8
   463  0007                     _PORTC	set	7
   464  0006                     _PORTB	set	6
   465  0005                     _PORTA	set	5
   466  0001                     _TMR0	set	1
   467  000B                     _INTCONbits	set	11
   468  0005                     _PORTAbits	set	5
   469  001A                     _RCREG	set	26
   470  000C                     _PIR1bits	set	12
   471  0063                     _SSPIF	set	99
   472  005E                     _PEIE	set	94
   473  005F                     _GIE	set	95
   474  008F                     _OSCCONbits	set	143
   475  009A                     _SPBRGH	set	154
   476  0099                     _SPBRG	set	153
   477  0091                     _SSPCON2bits	set	145
   478  0087                     _TRISCbits	set	135
   479  0094                     _SSPSTAT	set	148
   480  0093                     _SSPADD	set	147
   481  0091                     _SSPCON2	set	145
   482  0098                     _TXSTAbits	set	152
   483  0081                     _OPTION_REGbits	set	129
   484  008C                     _PIE1bits	set	140
   485  0089                     _TRISE	set	137
   486  0088                     _TRISD	set	136
   487  0087                     _TRISC	set	135
   488  0086                     _TRISB	set	134
   489  0085                     _TRISA	set	133
   490  0463                     _SSPIE	set	1123
   491  043C                     _TRISC4	set	1084
   492  043B                     _TRISC3	set	1083
   493  0187                     _BAUDCTLbits	set	391
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	cinit
   498  0013                     start_initialization:	
   499                           ; #config settings
   500                           
   501  0013                     __initialization:
   502                           
   503                           ; Clear objects allocated to COMMON
   504  0013  01F8               	clrf	__pbssCOMMON& (0+127)
   505  0014  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   506  0015  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   507                           
   508                           ; Clear objects allocated to BANK0
   509  0016  1383               	bcf	3,7	;select IRP bank0
   510  0017  3020               	movlw	low __pbssBANK0
   511  0018  0084               	movwf	4
   512  0019  303C               	movlw	low (__pbssBANK0+28)
   513  001A  120A  118A  241C  120A  118A  	fcall	clear_ram0
   514  001F                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  001F                     __end_of__initialization:
   518  001F  0183               	clrf	3
   519  0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMMON
   522  0078                     __pbssCOMMON:
   523  0078                     _day:
   524  0078                     	ds	1
   525  0079                     _mou:
   526  0079                     	ds	1
   527  007A                     _temp:
   528  007A                     	ds	1
   529                           
   530                           	psect	bssBANK0
   531  0020                     __pbssBANK0:
   532  0020                     _segundos:
   533  0020                     	ds	1
   534  0021                     _seg_t:
   535  0021                     	ds	1
   536  0022                     _min_t:
   537  0022                     	ds	1
   538  0023                     _hor_t:
   539  0023                     	ds	1
   540  0024                     _day_t:
   541  0024                     	ds	1
   542  0025                     _mou_t:
   543  0025                     	ds	1
   544  0026                     _seg_u:
   545  0026                     	ds	1
   546  0027                     _min_u:
   547  0027                     	ds	1
   548  0028                     _hor_u:
   549  0028                     	ds	1
   550  0029                     _day_u:
   551  0029                     	ds	1
   552  002A                     _mou_u:
   553  002A                     	ds	1
   554  002B                     _year:
   555  002B                     	ds	1
   556  002C                     _week:
   557  002C                     	ds	1
   558  002D                     _seg:
   559  002D                     	ds	1
   560  002E                     _min:
   561  002E                     	ds	1
   562  002F                     _hor:
   563  002F                     	ds	1
   564  0030                     _g:
   565  0030                     	ds	1
   566  0031                     _b:
   567  0031                     	ds	1
   568  0032                     _M:
   569  0032                     	ds	1
   570  0033                     _s:
   571  0033                     	ds	1
   572  0034                     _m:
   573  0034                     	ds	1
   574  0035                     _h:
   575  0035                     	ds	1
   576  0036                     _q:
   577  0036                     	ds	1
   578  0037                     _C:
   579  0037                     	ds	1
   580  0038                     _r:
   581  0038                     	ds	1
   582  0039                     _z:
   583  0039                     	ds	1
   584  003A                     _Z:
   585  003A                     	ds	1
   586  003B                     _L:
   587  003B                     	ds	1
   588                           
   589                           	psect	clrtext
   590  041C                     clear_ram0:	
   591                           ;	Called with FSR containing the base address, and
   592                           ;	W with the last address+1
   593                           
   594  041C  0064               	clrwdt	;clear the watchdog before getting into this loop
   595  041D                     clrloop0:
   596  041D  0180               	clrf	0	;clear RAM location pointed to by FSR
   597  041E  0A84               	incf	4,f	;increment pointer
   598  041F  0604               	xorwf	4,w	;XOR with final address
   599  0420  1903               	btfsc	3,2	;have we reached the end yet?
   600  0421  3400               	retlw	0	;all done for this memory range, return
   601  0422  0604               	xorwf	4,w	;XOR again to restore value
   602  0423  2C1D               	goto	clrloop0	;do the next byte
   603                           
   604                           	psect	cstackCOMMON
   605  0070                     __pcstackCOMMON:
   606  0070                     ?_Setup:
   607  0070                     ?_I2C_Master_Start:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_I2C_Master_RepeatedStart:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_I2C_Master_Stop:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_CONVET:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_first_send:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_initOsc:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_RX:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_TX:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_send_seg:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_send_min:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_send_hora:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_isr:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ??_isr:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_main:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_I2C_Master_Wait:	
   650                           ; 1 bytes @ 0x0
   651                           
   652                           
   653                           ; 1 bytes @ 0x0
   654  0070                     	ds	3
   655  0073                     ??_I2C_Master_Start:
   656  0073                     ?_I2C_Master_Write:	
   657                           ; 1 bytes @ 0x3
   658                           
   659  0073                     ??_I2C_Master_RepeatedStart:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     ??_I2C_Master_Stop:	
   663                           ; 1 bytes @ 0x3
   664                           
   665  0073                     ??_CONVET:	
   666                           ; 1 bytes @ 0x3
   667                           
   668  0073                     ??_initOsc:	
   669                           ; 1 bytes @ 0x3
   670                           
   671  0073                     ??_RX:	
   672                           ; 1 bytes @ 0x3
   673                           
   674  0073                     ??_TX:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     ??_send_seg:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0073                     ??_send_min:	
   681                           ; 1 bytes @ 0x3
   682                           
   683  0073                     ??_send_hora:	
   684                           ; 1 bytes @ 0x3
   685                           
   686  0073                     ??_I2C_Master_Wait:	
   687                           ; 1 bytes @ 0x3
   688                           
   689  0073                     ??___lldiv:	
   690                           ; 1 bytes @ 0x3
   691                           
   692  0073                     ?_I2C_Master_Read:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0073                     I2C_Master_Write@d:	
   696                           ; 2 bytes @ 0x3
   697                           
   698  0073                     I2C_Master_Read@a:	
   699                           ; 2 bytes @ 0x3
   700                           
   701                           
   702                           ; 2 bytes @ 0x3
   703  0073                     	ds	1
   704  0074                     ??_I2C_Master_Init:
   705                           
   706                           ; 1 bytes @ 0x4
   707  0074                     	ds	1
   708  0075                     ??_I2C_Master_Write:
   709  0075                     ??_I2C_Master_Read:	
   710                           ; 1 bytes @ 0x5
   711                           
   712  0075                     ??_first_send:	
   713                           ; 1 bytes @ 0x5
   714                           
   715  0075                     initOsc@IRCF:	
   716                           ; 1 bytes @ 0x5
   717                           
   718                           
   719                           ; 1 bytes @ 0x5
   720  0075                     	ds	1
   721  0076                     ??_Setup:
   722                           
   723                           ; 1 bytes @ 0x6
   724  0076                     	ds	2
   725  0078                     ??_main:
   726                           
   727                           	psect	cstackBANK0
   728  003C                     __pcstackBANK0:	
   729                           ; 1 bytes @ 0x8
   730                           
   731  003C                     ?___lldiv:
   732  003C                     I2C_Master_Read@temp:	
   733                           ; 4 bytes @ 0x0
   734                           
   735  003C                     ___lldiv@divisor:	
   736                           ; 2 bytes @ 0x0
   737                           
   738                           
   739                           ; 4 bytes @ 0x0
   740  003C                     	ds	4
   741  0040                     ___lldiv@dividend:
   742                           
   743                           ; 4 bytes @ 0x4
   744  0040                     	ds	4
   745  0044                     ___lldiv@quotient:
   746                           
   747                           ; 4 bytes @ 0x8
   748  0044                     	ds	4
   749  0048                     ___lldiv@counter:
   750                           
   751                           ; 1 bytes @ 0xC
   752  0048                     	ds	1
   753  0049                     ?_I2C_Master_Init:
   754  0049                     I2C_Master_Init@c:	
   755                           ; 1 bytes @ 0xD
   756                           
   757                           
   758                           ; 4 bytes @ 0xD
   759  0049                     	ds	4
   760                           
   761                           	psect	maintext
   762  0023                     __pmaintext:	
   763 ;;
   764 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   765 ;;
   766 ;; *************** function _main *****************
   767 ;; Defined at:
   768 ;;		line 72 in file "MCU.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : B00/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0
   785 ;;      Totals:         0       0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels required when called:    3
   788 ;; This function calls:
   789 ;;		_CONVET
   790 ;;		_I2C_Master_Init
   791 ;;		_I2C_Master_Read
   792 ;;		_I2C_Master_RepeatedStart
   793 ;;		_I2C_Master_Start
   794 ;;		_I2C_Master_Stop
   795 ;;		_I2C_Master_Write
   796 ;;		_Setup
   797 ;;		_first_send
   798 ;; This function is called by:
   799 ;;		Startup code after reset
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _main
   805  0023                     _main:
   806  0023                     l1781:	
   807                           ;incstack = 0
   808                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   809                           
   810                           
   811                           ;MCU.c: 73:     Setup();
   812  0023  120A  118A  234B  120A  118A  	fcall	_Setup
   813  0028                     l1783:
   814                           
   815                           ;MCU.c: 74:     PORTAbits.RA0=1;
   816  0028  1283               	bcf	3,5	;RP0=0, select bank0
   817  0029  1303               	bcf	3,6	;RP1=0, select bank0
   818  002A  1405               	bsf	5,0	;volatile
   819  002B                     l1785:
   820                           
   821                           ;MCU.c: 75:     PORTAbits.RA1=1;
   822  002B  1485               	bsf	5,1	;volatile
   823  002C                     l1787:
   824                           
   825                           ;MCU.c: 76:     PORTAbits.RA0=0;
   826  002C  1005               	bcf	5,0	;volatile
   827  002D                     l1789:
   828                           
   829                           ;MCU.c: 77:     PORTAbits.RA1=0;
   830  002D  1085               	bcf	5,1	;volatile
   831  002E                     l1791:
   832                           
   833                           ;MCU.c: 78:     I2C_Master_Init(100000);
   834  002E  3000               	movlw	0
   835  002F  00CC               	movwf	I2C_Master_Init@c+3
   836  0030  3001               	movlw	1
   837  0031  00CB               	movwf	I2C_Master_Init@c+2
   838  0032  3086               	movlw	134
   839  0033  00CA               	movwf	I2C_Master_Init@c+1
   840  0034  30A0               	movlw	160
   841  0035  00C9               	movwf	I2C_Master_Init@c
   842  0036  120A  118A  2311  120A  118A  	fcall	_I2C_Master_Init
   843  003B                     l1793:
   844                           
   845                           ;MCU.c: 84:         I2C_Master_Start();
   846  003B  120A  118A  240A  120A  118A  	fcall	_I2C_Master_Start
   847  0040                     l1795:
   848                           
   849                           ;MCU.c: 85:         I2C_Master_Write(0xD0);
   850  0040  30D0               	movlw	208
   851  0041  00F3               	movwf	I2C_Master_Write@d
   852  0042  3000               	movlw	0
   853  0043  00F4               	movwf	I2C_Master_Write@d+1
   854  0044  120A  118A  23F7  120A  118A  	fcall	_I2C_Master_Write
   855  0049                     l1797:
   856                           
   857                           ;MCU.c: 86:         I2C_Master_Write(0x00);
   858  0049  3000               	movlw	0
   859  004A  00F3               	movwf	I2C_Master_Write@d
   860  004B  00F4               	movwf	I2C_Master_Write@d+1
   861  004C  120A  118A  23F7  120A  118A  	fcall	_I2C_Master_Write
   862  0051                     l1799:
   863                           
   864                           ;MCU.c: 87:         I2C_Master_RepeatedStart();
   865  0051  120A  118A  2413  120A  118A  	fcall	_I2C_Master_RepeatedStart
   866  0056                     l1801:
   867                           
   868                           ;MCU.c: 88:         I2C_Master_Write(0xD1);
   869  0056  30D1               	movlw	209
   870  0057  00F3               	movwf	I2C_Master_Write@d
   871  0058  3000               	movlw	0
   872  0059  00F4               	movwf	I2C_Master_Write@d+1
   873  005A  120A  118A  23F7  120A  118A  	fcall	_I2C_Master_Write
   874  005F                     l1803:
   875                           
   876                           ;MCU.c: 89:         seg = I2C_Master_Read(1);
   877  005F  3001               	movlw	1
   878  0060  00F3               	movwf	I2C_Master_Read@a
   879  0061  3000               	movlw	0
   880  0062  00F4               	movwf	I2C_Master_Read@a+1
   881  0063  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   882  0068  0873               	movf	?_I2C_Master_Read,w
   883  0069  00FF               	movwf	btemp+1
   884  006A  087F               	movf	btemp+1,w
   885  006B  1283               	bcf	3,5	;RP0=0, select bank0
   886  006C  1303               	bcf	3,6	;RP1=0, select bank0
   887  006D  00AD               	movwf	_seg
   888  006E                     l1805:
   889                           
   890                           ;MCU.c: 90:         min = I2C_Master_Read(1);
   891  006E  3001               	movlw	1
   892  006F  00F3               	movwf	I2C_Master_Read@a
   893  0070  3000               	movlw	0
   894  0071  00F4               	movwf	I2C_Master_Read@a+1
   895  0072  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   896  0077  0873               	movf	?_I2C_Master_Read,w
   897  0078  00FF               	movwf	btemp+1
   898  0079  087F               	movf	btemp+1,w
   899  007A  1283               	bcf	3,5	;RP0=0, select bank0
   900  007B  1303               	bcf	3,6	;RP1=0, select bank0
   901  007C  00AE               	movwf	_min
   902  007D                     l1807:
   903                           
   904                           ;MCU.c: 91:         week = I2C_Master_Read(1);
   905  007D  3001               	movlw	1
   906  007E  00F3               	movwf	I2C_Master_Read@a
   907  007F  3000               	movlw	0
   908  0080  00F4               	movwf	I2C_Master_Read@a+1
   909  0081  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   910  0086  0873               	movf	?_I2C_Master_Read,w
   911  0087  00FF               	movwf	btemp+1
   912  0088  087F               	movf	btemp+1,w
   913  0089  1283               	bcf	3,5	;RP0=0, select bank0
   914  008A  1303               	bcf	3,6	;RP1=0, select bank0
   915  008B  00AC               	movwf	_week
   916  008C                     l1809:
   917                           
   918                           ;MCU.c: 92:         hor = I2C_Master_Read(1);
   919  008C  3001               	movlw	1
   920  008D  00F3               	movwf	I2C_Master_Read@a
   921  008E  3000               	movlw	0
   922  008F  00F4               	movwf	I2C_Master_Read@a+1
   923  0090  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   924  0095  0873               	movf	?_I2C_Master_Read,w
   925  0096  00FF               	movwf	btemp+1
   926  0097  087F               	movf	btemp+1,w
   927  0098  1283               	bcf	3,5	;RP0=0, select bank0
   928  0099  1303               	bcf	3,6	;RP1=0, select bank0
   929  009A  00AF               	movwf	_hor
   930  009B                     l1811:
   931                           
   932                           ;MCU.c: 93:         day = I2C_Master_Read(1);
   933  009B  3001               	movlw	1
   934  009C  00F3               	movwf	I2C_Master_Read@a
   935  009D  3000               	movlw	0
   936  009E  00F4               	movwf	I2C_Master_Read@a+1
   937  009F  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   938  00A4  0873               	movf	?_I2C_Master_Read,w
   939  00A5  00FF               	movwf	btemp+1
   940  00A6  087F               	movf	btemp+1,w
   941  00A7  00F8               	movwf	_day
   942  00A8                     l1813:
   943                           
   944                           ;MCU.c: 94:         mou = I2C_Master_Read(1);
   945  00A8  3001               	movlw	1
   946  00A9  00F3               	movwf	I2C_Master_Read@a
   947  00AA  3000               	movlw	0
   948  00AB  00F4               	movwf	I2C_Master_Read@a+1
   949  00AC  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   950  00B1  0873               	movf	?_I2C_Master_Read,w
   951  00B2  00FF               	movwf	btemp+1
   952  00B3  087F               	movf	btemp+1,w
   953  00B4  00F9               	movwf	_mou
   954  00B5                     l1815:
   955                           
   956                           ;MCU.c: 95:         year= I2C_Master_Read(0);
   957  00B5  3000               	movlw	0
   958  00B6  00F3               	movwf	I2C_Master_Read@a
   959  00B7  00F4               	movwf	I2C_Master_Read@a+1
   960  00B8  120A  118A  237B  120A  118A  	fcall	_I2C_Master_Read
   961  00BD  0873               	movf	?_I2C_Master_Read,w
   962  00BE  00FF               	movwf	btemp+1
   963  00BF  087F               	movf	btemp+1,w
   964  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   965  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   966  00C2  00AB               	movwf	_year
   967  00C3                     l1817:
   968                           
   969                           ;MCU.c: 96:         I2C_Master_Stop();
   970  00C3  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Stop
   971  00C8                     l1819:
   972                           
   973                           ;MCU.c: 97:         CONVET();
   974  00C8  120A  118A  213E  120A  118A  	fcall	_CONVET
   975  00CD                     l1821:
   976                           
   977                           ;MCU.c: 98:         first_send();
   978  00CD  120A  118A  23AB  120A  118A  	fcall	_first_send
   979  00D2  283B               	goto	l1793
   980  00D3  120A  118A  2810   	ljmp	start
   981  00D6                     __end_of_main:
   982                           
   983                           	psect	text1
   984  03AB                     __ptext1:	
   985 ;; *************** function _first_send *****************
   986 ;; Defined at:
   987 ;;		line 153 in file "MCU.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    2
  1008 ;; This function calls:
  1009 ;;		_send_hora
  1010 ;;		_send_min
  1011 ;;		_send_seg
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _first_send
  1019  03AB                     _first_send:
  1020  03AB                     l1529:	
  1021                           ;incstack = 0
  1022                           ; Regs used in _first_send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1023                           
  1024                           
  1025                           ;MCU.c: 154:     if (C==1){send_seg();}
  1026  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1027  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1028  03AD  0337               	decf	_C,w
  1029  03AE  1D03               	btfss	3,2
  1030  03AF  2BB1               	goto	u641
  1031  03B0  2BB2               	goto	u640
  1032  03B1                     u641:
  1033  03B1  2BB7               	goto	l1533
  1034  03B2                     u640:
  1035  03B2                     l1531:
  1036  03B2  120A  118A  224F  120A  118A  	fcall	_send_seg
  1037  03B7                     l1533:
  1038                           
  1039                           ;MCU.c: 155:     if (b==1){send_min();}
  1040  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1041  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1042  03B9  0331               	decf	_b,w
  1043  03BA  1D03               	btfss	3,2
  1044  03BB  2BBD               	goto	u651
  1045  03BC  2BBE               	goto	u650
  1046  03BD                     u651:
  1047  03BD  2BC3               	goto	l1537
  1048  03BE                     u650:
  1049  03BE                     l1535:
  1050  03BE  120A  118A  2295  120A  118A  	fcall	_send_min
  1051  03C3                     l1537:
  1052                           
  1053                           ;MCU.c: 156:     if (g==1){send_hora();}
  1054  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1055  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1056  03C5  0330               	decf	_g,w
  1057  03C6  1D03               	btfss	3,2
  1058  03C7  2BC9               	goto	u661
  1059  03C8  2BCA               	goto	u660
  1060  03C9                     u661:
  1061  03C9  2BCF               	goto	l169
  1062  03CA                     u660:
  1063  03CA                     l1539:
  1064  03CA  120A  118A  22D3  120A  118A  	fcall	_send_hora
  1065  03CF                     l169:
  1066  03CF  0008               	return
  1067  03D0                     __end_of_first_send:
  1068                           
  1069                           	psect	text2
  1070  024F                     __ptext2:	
  1071 ;; *************** function _send_seg *****************
  1072 ;; Defined at:
  1073 ;;		line 198 in file "MCU.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0
  1089 ;;      Temps:          2       0       0       0       0
  1090 ;;      Totals:         2       0       0       0       0
  1091 ;;Total ram usage:        2 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    1
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_first_send
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function _send_seg
  1103  024F                     _send_seg:
  1104  024F                     l1341:	
  1105                           ;incstack = 0
  1106                           ; Regs used in _send_seg: [wreg-fsr0h+status,2+status,0+btemp+1]
  1107                           
  1108                           
  1109                           ;MCU.c: 200:     switch (s){
  1110  024F  2A7F               	goto	l1361
  1111  0250                     l1343:
  1112                           
  1113                           ;MCU.c: 202:             TXREG = (seg_t+0x30);
  1114  0250  0821               	movf	_seg_t,w
  1115  0251  3E30               	addlw	48
  1116  0252  0099               	movwf	25	;volatile
  1117  0253                     l208:	
  1118                           ;MCU.c: 203:             while(!TXSTAbits.TRMT);
  1119                           
  1120  0253  1683               	bsf	3,5	;RP0=1, select bank1
  1121  0254  1303               	bcf	3,6	;RP1=0, select bank1
  1122  0255  1C98               	btfss	24,1	;volatile
  1123  0256  2A58               	goto	u391
  1124  0257  2A59               	goto	u390
  1125  0258                     u391:
  1126  0258  2A53               	goto	l208
  1127  0259                     u390:
  1128  0259                     l1345:
  1129                           
  1130                           ;MCU.c: 204:             s++;
  1131  0259  3001               	movlw	1
  1132  025A  00FF               	movwf	btemp+1
  1133  025B  087F               	movf	btemp+1,w
  1134  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1135  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1136  025E  07B3               	addwf	_s,f
  1137                           
  1138                           ;MCU.c: 205:             break;
  1139  025F  2A94               	goto	l220
  1140  0260                     l1347:
  1141                           
  1142                           ;MCU.c: 207:             TXREG = (seg_u+0x30);
  1143  0260  0826               	movf	_seg_u,w
  1144  0261  3E30               	addlw	48
  1145  0262  0099               	movwf	25	;volatile
  1146  0263                     l213:	
  1147                           ;MCU.c: 208:             while(!TXSTAbits.TRMT);
  1148                           
  1149  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1150  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1151  0265  1C98               	btfss	24,1	;volatile
  1152  0266  2A68               	goto	u401
  1153  0267  2A69               	goto	u400
  1154  0268                     u401:
  1155  0268  2A63               	goto	l213
  1156  0269                     u400:
  1157  0269                     l1349:
  1158                           
  1159                           ;MCU.c: 209:             s++;
  1160  0269  3001               	movlw	1
  1161  026A  00FF               	movwf	btemp+1
  1162  026B  087F               	movf	btemp+1,w
  1163  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1164  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1165  026E  07B3               	addwf	_s,f
  1166  026F                     l1351:
  1167                           
  1168                           ;MCU.c: 210:             s=0;
  1169  026F  01B3               	clrf	_s
  1170  0270                     l1353:
  1171                           
  1172                           ;MCU.c: 211:             C=0;
  1173  0270  01B7               	clrf	_C
  1174                           
  1175                           ;MCU.c: 212:             break;
  1176  0271  2A94               	goto	l220
  1177  0272                     l1355:
  1178                           
  1179                           ;MCU.c: 214:             TXREG = (0x03);
  1180  0272  3003               	movlw	3
  1181  0273  0099               	movwf	25	;volatile
  1182  0274                     l217:	
  1183                           ;MCU.c: 215:             while(!TXSTAbits.TRMT);
  1184                           
  1185  0274  1683               	bsf	3,5	;RP0=1, select bank1
  1186  0275  1303               	bcf	3,6	;RP1=0, select bank1
  1187  0276  1C98               	btfss	24,1	;volatile
  1188  0277  2A79               	goto	u411
  1189  0278  2A7A               	goto	u410
  1190  0279                     u411:
  1191  0279  2A74               	goto	l217
  1192  027A                     u410:
  1193  027A                     l1357:
  1194                           
  1195                           ;MCU.c: 216:             s=0;
  1196  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1197  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1198  027C  01B3               	clrf	_s
  1199                           
  1200                           ;MCU.c: 217:             C=0;
  1201  027D  01B7               	clrf	_C
  1202                           
  1203                           ;MCU.c: 218:             break;
  1204  027E  2A94               	goto	l220
  1205  027F                     l1361:
  1206  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0281  0833               	movf	_s,w
  1209  0282  00F3               	movwf	??_send_seg
  1210  0283  01F4               	clrf	??_send_seg+1
  1211                           
  1212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1213                           ; Switch size 1, requested type "simple"
  1214                           ; Number of cases is 1, Range of values is 0 to 0
  1215                           ; switch strategies available:
  1216                           ; Name         Instructions Cycles
  1217                           ; simple_byte            4     3 (average)
  1218                           ; direct_byte           11     8 (fixed)
  1219                           ; jumptable            260     6 (fixed)
  1220                           ;	Chosen strategy is simple_byte
  1221  0284  0874               	movf	??_send_seg+1,w
  1222  0285  3A00               	xorlw	0	; case 0
  1223  0286  1903               	skipnz
  1224  0287  2A89               	goto	l1903
  1225  0288  2A94               	goto	l220
  1226  0289                     l1903:
  1227                           
  1228                           ; Switch size 1, requested type "simple"
  1229                           ; Number of cases is 3, Range of values is 0 to 2
  1230                           ; switch strategies available:
  1231                           ; Name         Instructions Cycles
  1232                           ; simple_byte           10     6 (average)
  1233                           ; direct_byte           17     8 (fixed)
  1234                           ; jumptable            260     6 (fixed)
  1235                           ;	Chosen strategy is simple_byte
  1236  0289  0873               	movf	??_send_seg,w
  1237  028A  3A00               	xorlw	0	; case 0
  1238  028B  1903               	skipnz
  1239  028C  2A50               	goto	l1343
  1240  028D  3A01               	xorlw	1	; case 1
  1241  028E  1903               	skipnz
  1242  028F  2A60               	goto	l1347
  1243  0290  3A03               	xorlw	3	; case 2
  1244  0291  1903               	skipnz
  1245  0292  2A72               	goto	l1355
  1246  0293  2A94               	goto	l220
  1247  0294                     l220:
  1248  0294  0008               	return
  1249  0295                     __end_of_send_seg:
  1250                           
  1251                           	psect	text3
  1252  0295                     __ptext3:	
  1253 ;; *************** function _send_min *****************
  1254 ;; Defined at:
  1255 ;;		line 178 in file "MCU.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          2       0       0       0       0
  1272 ;;      Totals:         2       0       0       0       0
  1273 ;;Total ram usage:        2 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_first_send
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _send_min
  1285  0295                     _send_min:
  1286  0295                     l1367:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _send_min: [wreg-fsr0h+status,2+status,0+btemp+1]
  1289                           
  1290                           
  1291                           ;MCU.c: 180:     switch (m){
  1292  0295  2ABD               	goto	l1383
  1293  0296                     l1369:
  1294                           
  1295                           ;MCU.c: 182:              TXREG = (min_t+0x30);
  1296  0296  0822               	movf	_min_t,w
  1297  0297  3E30               	addlw	48
  1298  0298  0099               	movwf	25	;volatile
  1299  0299                     l191:	
  1300                           ;MCU.c: 183:              while(!TXSTAbits.TRMT);
  1301                           
  1302  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1303  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1304  029B  1C98               	btfss	24,1	;volatile
  1305  029C  2A9E               	goto	u421
  1306  029D  2A9F               	goto	u420
  1307  029E                     u421:
  1308  029E  2A99               	goto	l191
  1309  029F                     u420:
  1310  029F                     l1371:
  1311                           
  1312                           ;MCU.c: 184:              m++;
  1313  029F  3001               	movlw	1
  1314  02A0  00FF               	movwf	btemp+1
  1315  02A1  087F               	movf	btemp+1,w
  1316  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1317  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1318  02A4  07B4               	addwf	_m,f
  1319                           
  1320                           ;MCU.c: 185:             break;
  1321  02A5  2AD2               	goto	l203
  1322  02A6                     l1373:
  1323                           
  1324                           ;MCU.c: 187:              TXREG = (min_u +0x30);
  1325  02A6  0827               	movf	_min_u,w
  1326  02A7  3E30               	addlw	48
  1327  02A8  0099               	movwf	25	;volatile
  1328  02A9                     l196:	
  1329                           ;MCU.c: 188:              while(!TXSTAbits.TRMT);
  1330                           
  1331  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1332  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  1333  02AB  1C98               	btfss	24,1	;volatile
  1334  02AC  2AAE               	goto	u431
  1335  02AD  2AAF               	goto	u430
  1336  02AE                     u431:
  1337  02AE  2AA9               	goto	l196
  1338  02AF                     u430:
  1339  02AF  2A9F               	goto	l1371
  1340  02B0                     l1377:
  1341                           
  1342                           ;MCU.c: 192:             TXREG = (0x03);
  1343  02B0  3003               	movlw	3
  1344  02B1  0099               	movwf	25	;volatile
  1345  02B2                     l200:	
  1346                           ;MCU.c: 193:             while(!TXSTAbits.TRMT);
  1347                           
  1348  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1349  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1350  02B4  1C98               	btfss	24,1	;volatile
  1351  02B5  2AB7               	goto	u441
  1352  02B6  2AB8               	goto	u440
  1353  02B7                     u441:
  1354  02B7  2AB2               	goto	l200
  1355  02B8                     u440:
  1356  02B8                     l1379:
  1357                           
  1358                           ;MCU.c: 194:             m=0;
  1359  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1360  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1361  02BA  01B4               	clrf	_m
  1362                           
  1363                           ;MCU.c: 195:             b=0;
  1364  02BB  01B1               	clrf	_b
  1365                           
  1366                           ;MCU.c: 196:             break;
  1367  02BC  2AD2               	goto	l203
  1368  02BD                     l1383:
  1369  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1370  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1371  02BF  0834               	movf	_m,w
  1372  02C0  00F3               	movwf	??_send_min
  1373  02C1  01F4               	clrf	??_send_min+1
  1374                           
  1375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1376                           ; Switch size 1, requested type "simple"
  1377                           ; Number of cases is 1, Range of values is 0 to 0
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte            4     3 (average)
  1381                           ; direct_byte           11     8 (fixed)
  1382                           ; jumptable            260     6 (fixed)
  1383                           ;	Chosen strategy is simple_byte
  1384  02C2  0874               	movf	??_send_min+1,w
  1385  02C3  3A00               	xorlw	0	; case 0
  1386  02C4  1903               	skipnz
  1387  02C5  2AC7               	goto	l1905
  1388  02C6  2AD2               	goto	l203
  1389  02C7                     l1905:
  1390                           
  1391                           ; Switch size 1, requested type "simple"
  1392                           ; Number of cases is 3, Range of values is 0 to 2
  1393                           ; switch strategies available:
  1394                           ; Name         Instructions Cycles
  1395                           ; simple_byte           10     6 (average)
  1396                           ; direct_byte           17     8 (fixed)
  1397                           ; jumptable            260     6 (fixed)
  1398                           ;	Chosen strategy is simple_byte
  1399  02C7  0873               	movf	??_send_min,w
  1400  02C8  3A00               	xorlw	0	; case 0
  1401  02C9  1903               	skipnz
  1402  02CA  2A96               	goto	l1369
  1403  02CB  3A01               	xorlw	1	; case 1
  1404  02CC  1903               	skipnz
  1405  02CD  2AA6               	goto	l1373
  1406  02CE  3A03               	xorlw	3	; case 2
  1407  02CF  1903               	skipnz
  1408  02D0  2AB0               	goto	l1377
  1409  02D1  2AD2               	goto	l203
  1410  02D2                     l203:
  1411  02D2  0008               	return
  1412  02D3                     __end_of_send_min:
  1413                           
  1414                           	psect	text4
  1415  02D3                     __ptext4:	
  1416 ;; *************** function _send_hora *****************
  1417 ;; Defined at:
  1418 ;;		line 158 in file "MCU.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0
  1434 ;;      Temps:          2       0       0       0       0
  1435 ;;      Totals:         2       0       0       0       0
  1436 ;;Total ram usage:        2 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    1
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_first_send
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _send_hora
  1448  02D3                     _send_hora:
  1449  02D3                     l1389:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _send_hora: [wreg-fsr0h+status,2+status,0+btemp+1]
  1452                           
  1453                           
  1454                           ;MCU.c: 160:     switch (h){
  1455  02D3  2AFB               	goto	l1405
  1456  02D4                     l1391:
  1457                           
  1458                           ;MCU.c: 162:             TXREG = (hor_t+0x30);
  1459  02D4  0823               	movf	_hor_t,w
  1460  02D5  3E30               	addlw	48
  1461  02D6  0099               	movwf	25	;volatile
  1462  02D7                     l174:	
  1463                           ;MCU.c: 163:             while(!TXSTAbits.TRMT);
  1464                           
  1465  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1466  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1467  02D9  1C98               	btfss	24,1	;volatile
  1468  02DA  2ADC               	goto	u451
  1469  02DB  2ADD               	goto	u450
  1470  02DC                     u451:
  1471  02DC  2AD7               	goto	l174
  1472  02DD                     u450:
  1473  02DD                     l1393:
  1474                           
  1475                           ;MCU.c: 164:             h++;
  1476  02DD  3001               	movlw	1
  1477  02DE  00FF               	movwf	btemp+1
  1478  02DF  087F               	movf	btemp+1,w
  1479  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1480  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1481  02E2  07B5               	addwf	_h,f
  1482                           
  1483                           ;MCU.c: 165:             break;
  1484  02E3  2B10               	goto	l186
  1485  02E4                     l1395:
  1486                           
  1487                           ;MCU.c: 167:             TXREG = (hor_u+0x30);
  1488  02E4  0828               	movf	_hor_u,w
  1489  02E5  3E30               	addlw	48
  1490  02E6  0099               	movwf	25	;volatile
  1491  02E7                     l179:	
  1492                           ;MCU.c: 168:             while(!TXSTAbits.TRMT);
  1493                           
  1494  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1495  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1496  02E9  1C98               	btfss	24,1	;volatile
  1497  02EA  2AEC               	goto	u461
  1498  02EB  2AED               	goto	u460
  1499  02EC                     u461:
  1500  02EC  2AE7               	goto	l179
  1501  02ED                     u460:
  1502  02ED  2ADD               	goto	l1393
  1503  02EE                     l1399:
  1504                           
  1505                           ;MCU.c: 172:             TXREG = (0x3A);
  1506  02EE  303A               	movlw	58
  1507  02EF  0099               	movwf	25	;volatile
  1508  02F0                     l183:	
  1509                           ;MCU.c: 173:             while(!TXSTAbits.TRMT);
  1510                           
  1511  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1512  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  1513  02F2  1C98               	btfss	24,1	;volatile
  1514  02F3  2AF5               	goto	u471
  1515  02F4  2AF6               	goto	u470
  1516  02F5                     u471:
  1517  02F5  2AF0               	goto	l183
  1518  02F6                     u470:
  1519  02F6                     l1401:
  1520                           
  1521                           ;MCU.c: 174:             h=0;
  1522  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1523  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1524  02F8  01B5               	clrf	_h
  1525                           
  1526                           ;MCU.c: 175:             g=0;
  1527  02F9  01B0               	clrf	_g
  1528                           
  1529                           ;MCU.c: 176:             break;
  1530  02FA  2B10               	goto	l186
  1531  02FB                     l1405:
  1532  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1533  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1534  02FD  0835               	movf	_h,w
  1535  02FE  00F3               	movwf	??_send_hora
  1536  02FF  01F4               	clrf	??_send_hora+1
  1537                           
  1538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1539                           ; Switch size 1, requested type "simple"
  1540                           ; Number of cases is 1, Range of values is 0 to 0
  1541                           ; switch strategies available:
  1542                           ; Name         Instructions Cycles
  1543                           ; simple_byte            4     3 (average)
  1544                           ; direct_byte           11     8 (fixed)
  1545                           ; jumptable            260     6 (fixed)
  1546                           ;	Chosen strategy is simple_byte
  1547  0300  0874               	movf	??_send_hora+1,w
  1548  0301  3A00               	xorlw	0	; case 0
  1549  0302  1903               	skipnz
  1550  0303  2B05               	goto	l1907
  1551  0304  2B10               	goto	l186
  1552  0305                     l1907:
  1553                           
  1554                           ; Switch size 1, requested type "simple"
  1555                           ; Number of cases is 3, Range of values is 0 to 2
  1556                           ; switch strategies available:
  1557                           ; Name         Instructions Cycles
  1558                           ; simple_byte           10     6 (average)
  1559                           ; direct_byte           17     8 (fixed)
  1560                           ; jumptable            260     6 (fixed)
  1561                           ;	Chosen strategy is simple_byte
  1562  0305  0873               	movf	??_send_hora,w
  1563  0306  3A00               	xorlw	0	; case 0
  1564  0307  1903               	skipnz
  1565  0308  2AD4               	goto	l1391
  1566  0309  3A01               	xorlw	1	; case 1
  1567  030A  1903               	skipnz
  1568  030B  2AE4               	goto	l1395
  1569  030C  3A03               	xorlw	3	; case 2
  1570  030D  1903               	skipnz
  1571  030E  2AEE               	goto	l1399
  1572  030F  2B10               	goto	l186
  1573  0310                     l186:
  1574  0310  0008               	return
  1575  0311                     __end_of_send_hora:
  1576                           
  1577                           	psect	text5
  1578  034B                     __ptext5:	
  1579 ;; *************** function _Setup *****************
  1580 ;; Defined at:
  1581 ;;		line 103 in file "MCU.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0
  1598 ;;      Totals:         0       0       0       0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    2
  1602 ;; This function calls:
  1603 ;;		_RX
  1604 ;;		_TX
  1605 ;;		_initOsc
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _Setup
  1613  034B                     _Setup:
  1614  034B                     l1441:	
  1615                           ;incstack = 0
  1616                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1617                           
  1618                           
  1619                           ;MCU.c: 105:     PORTA = 0;
  1620  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1621  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1622  034D  0185               	clrf	5	;volatile
  1623                           
  1624                           ;MCU.c: 106:     PORTB = 0;
  1625  034E  0186               	clrf	6	;volatile
  1626                           
  1627                           ;MCU.c: 107:     PORTC = 0;
  1628  034F  0187               	clrf	7	;volatile
  1629                           
  1630                           ;MCU.c: 108:     PORTD = 0;
  1631  0350  0188               	clrf	8	;volatile
  1632                           
  1633                           ;MCU.c: 109:     PORTE = 0;
  1634  0351  0189               	clrf	9	;volatile
  1635                           
  1636                           ;MCU.c: 111:     TRISA = 0B00000000;
  1637  0352  1683               	bsf	3,5	;RP0=1, select bank1
  1638  0353  1303               	bcf	3,6	;RP1=0, select bank1
  1639  0354  0185               	clrf	5	;volatile
  1640                           
  1641                           ;MCU.c: 112:     TRISB = 0B00000000;
  1642  0355  0186               	clrf	6	;volatile
  1643                           
  1644                           ;MCU.c: 113:     TRISC = 0B00000000;
  1645  0356  0187               	clrf	7	;volatile
  1646                           
  1647                           ;MCU.c: 114:     TRISD = 0B00000000;
  1648  0357  0188               	clrf	8	;volatile
  1649                           
  1650                           ;MCU.c: 115:     TRISE = 0B0000;
  1651  0358  0189               	clrf	9	;volatile
  1652                           
  1653                           ;MCU.c: 117:     ANSEL = 0B00000000;
  1654  0359  1683               	bsf	3,5	;RP0=1, select bank3
  1655  035A  1703               	bsf	3,6	;RP1=1, select bank3
  1656  035B  0188               	clrf	8	;volatile
  1657                           
  1658                           ;MCU.c: 118:     ANSELH = 0B00000000;
  1659  035C  0189               	clrf	9	;volatile
  1660  035D                     l1443:
  1661                           
  1662                           ;MCU.c: 120:     INTCONbits.GIE=1;
  1663  035D  178B               	bsf	11,7	;volatile
  1664  035E                     l1445:
  1665                           
  1666                           ;MCU.c: 121:     INTCONbits.PEIE=1;
  1667  035E  170B               	bsf	11,6	;volatile
  1668  035F                     l1447:
  1669                           
  1670                           ;MCU.c: 122:     INTCONbits.TMR0IE=1;
  1671  035F  168B               	bsf	11,5	;volatile
  1672  0360                     l1449:
  1673                           
  1674                           ;MCU.c: 123:     INTCONbits.TMR0IF=0;
  1675  0360  110B               	bcf	11,2	;volatile
  1676  0361                     l1451:
  1677                           
  1678                           ;MCU.c: 124:     PIE1bits.RCIE = 1;
  1679  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1681  0363  168C               	bsf	12,5	;volatile
  1682  0364                     l1453:
  1683                           
  1684                           ;MCU.c: 125:     OPTION_REGbits.T0CS=0;
  1685  0364  1281               	bcf	1,5	;volatile
  1686  0365                     l1455:
  1687                           
  1688                           ;MCU.c: 126:     OPTION_REGbits.T0SE=0;
  1689  0365  1201               	bcf	1,4	;volatile
  1690  0366                     l1457:
  1691                           
  1692                           ;MCU.c: 127:     OPTION_REGbits.PSA=0;
  1693  0366  1181               	bcf	1,3	;volatile
  1694  0367                     l1459:
  1695                           
  1696                           ;MCU.c: 129:     OPTION_REGbits.PS0=1;
  1697  0367  1401               	bsf	1,0	;volatile
  1698  0368                     l1461:
  1699                           
  1700                           ;MCU.c: 130:     OPTION_REGbits.PS1=1;
  1701  0368  1481               	bsf	1,1	;volatile
  1702  0369                     l1463:
  1703                           
  1704                           ;MCU.c: 131:     OPTION_REGbits.PS2=1;
  1705  0369  1501               	bsf	1,2	;volatile
  1706  036A                     l1465:
  1707                           
  1708                           ;MCU.c: 133:     initOsc(6);
  1709  036A  3006               	movlw	6
  1710  036B  120A  118A  219B  120A  118A  	fcall	_initOsc
  1711  0370                     l1467:
  1712                           
  1713                           ;MCU.c: 134:     RX();
  1714  0370  120A  118A  23EC  120A  118A  	fcall	_RX
  1715  0375                     l1469:
  1716                           
  1717                           ;MCU.c: 135:     TX();
  1718  0375  120A  118A  23D0  120A  118A  	fcall	_TX
  1719  037A                     l160:
  1720  037A  0008               	return
  1721  037B                     __end_of_Setup:
  1722                           
  1723                           	psect	text6
  1724  019B                     __ptext6:	
  1725 ;; *************** function _initOsc *****************
  1726 ;; Defined at:
  1727 ;;		line 6 in file "OSC.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  IRCF            1    wreg     unsigned char 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  IRCF            1    5[COMMON] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       0       0       0       0
  1742 ;;      Locals:         1       0       0       0       0
  1743 ;;      Temps:          2       0       0       0       0
  1744 ;;      Totals:         3       0       0       0       0
  1745 ;;Total ram usage:        3 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    1
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_Setup
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function _initOsc
  1757  019B                     _initOsc:
  1758                           
  1759                           ;incstack = 0
  1760                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1761                           ;initOsc@IRCF stored from wreg
  1762  019B  00F5               	movwf	initOsc@IRCF
  1763  019C                     l1323:
  1764                           
  1765                           ;OSC.c: 7: switch (IRCF) {
  1766  019C  29D3               	goto	l1327
  1767  019D                     l299:	
  1768                           ;OSC.c: 8:             case 0:
  1769                           
  1770                           
  1771                           ;OSC.c: 9:                 OSCCONbits.IRCF2=0;
  1772  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1773  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1774  019F  130F               	bcf	15,6	;volatile
  1775                           
  1776                           ;OSC.c: 10:                 OSCCONbits.IRCF1=0;
  1777  01A0  128F               	bcf	15,5	;volatile
  1778                           
  1779                           ;OSC.c: 11:                 OSCCONbits.IRCF0=0;
  1780  01A1  120F               	bcf	15,4	;volatile
  1781                           
  1782                           ;OSC.c: 12:                 break;
  1783  01A2  29F5               	goto	l300
  1784  01A3                     l301:	
  1785                           ;OSC.c: 13:             case 1:
  1786                           
  1787                           
  1788                           ;OSC.c: 14:                 OSCCONbits.IRCF2=0;
  1789  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1790  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1791  01A5  130F               	bcf	15,6	;volatile
  1792                           
  1793                           ;OSC.c: 15:                 OSCCONbits.IRCF1=0;
  1794  01A6  128F               	bcf	15,5	;volatile
  1795                           
  1796                           ;OSC.c: 16:                 OSCCONbits.IRCF0=1;
  1797  01A7  160F               	bsf	15,4	;volatile
  1798                           
  1799                           ;OSC.c: 17:                 break;
  1800  01A8  29F5               	goto	l300
  1801  01A9                     l302:	
  1802                           ;OSC.c: 18:             case 2:
  1803                           
  1804                           
  1805                           ;OSC.c: 19:                 OSCCONbits.IRCF2=0;
  1806  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  1807  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  1808  01AB  130F               	bcf	15,6	;volatile
  1809                           
  1810                           ;OSC.c: 20:                 OSCCONbits.IRCF1=1;
  1811  01AC  168F               	bsf	15,5	;volatile
  1812                           
  1813                           ;OSC.c: 21:                 OSCCONbits.IRCF0=0;
  1814  01AD  120F               	bcf	15,4	;volatile
  1815                           
  1816                           ;OSC.c: 22:                 break;
  1817  01AE  29F5               	goto	l300
  1818  01AF                     l303:	
  1819                           ;OSC.c: 23:             case 3:
  1820                           
  1821                           
  1822                           ;OSC.c: 24:                 OSCCONbits.IRCF2=0;
  1823  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1824  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1825  01B1  130F               	bcf	15,6	;volatile
  1826                           
  1827                           ;OSC.c: 25:                 OSCCONbits.IRCF1=1;
  1828  01B2  168F               	bsf	15,5	;volatile
  1829                           
  1830                           ;OSC.c: 26:                 OSCCONbits.IRCF0=1;
  1831  01B3  160F               	bsf	15,4	;volatile
  1832                           
  1833                           ;OSC.c: 27:                 break;
  1834  01B4  29F5               	goto	l300
  1835  01B5                     l304:	
  1836                           ;OSC.c: 28:             case 4:
  1837                           
  1838                           
  1839                           ;OSC.c: 29:                 OSCCONbits.IRCF2=1;
  1840  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1841  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1842  01B7  170F               	bsf	15,6	;volatile
  1843                           
  1844                           ;OSC.c: 30:                 OSCCONbits.IRCF1=0;
  1845  01B8  128F               	bcf	15,5	;volatile
  1846                           
  1847                           ;OSC.c: 31:                 OSCCONbits.IRCF0=0;
  1848  01B9  120F               	bcf	15,4	;volatile
  1849                           
  1850                           ;OSC.c: 32:                 break;
  1851  01BA  29F5               	goto	l300
  1852  01BB                     l305:	
  1853                           ;OSC.c: 33:             case 5:
  1854                           
  1855                           
  1856                           ;OSC.c: 34:                 OSCCONbits.IRCF2=1;
  1857  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1858  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1859  01BD  170F               	bsf	15,6	;volatile
  1860                           
  1861                           ;OSC.c: 35:                 OSCCONbits.IRCF1=0;
  1862  01BE  128F               	bcf	15,5	;volatile
  1863                           
  1864                           ;OSC.c: 36:                 OSCCONbits.IRCF0=1;
  1865  01BF  160F               	bsf	15,4	;volatile
  1866                           
  1867                           ;OSC.c: 37:                 break;
  1868  01C0  29F5               	goto	l300
  1869  01C1                     l306:	
  1870                           ;OSC.c: 38:             case 6:
  1871                           
  1872                           
  1873                           ;OSC.c: 39:                 OSCCONbits.IRCF2=1;
  1874  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  1875  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  1876  01C3  170F               	bsf	15,6	;volatile
  1877                           
  1878                           ;OSC.c: 40:                 OSCCONbits.IRCF1=1;
  1879  01C4  168F               	bsf	15,5	;volatile
  1880                           
  1881                           ;OSC.c: 41:                 OSCCONbits.IRCF0=0;
  1882  01C5  120F               	bcf	15,4	;volatile
  1883                           
  1884                           ;OSC.c: 42:                 break;
  1885  01C6  29F5               	goto	l300
  1886  01C7                     l307:	
  1887                           ;OSC.c: 43:             case 7:
  1888                           
  1889                           
  1890                           ;OSC.c: 44:                 OSCCONbits.IRCF2=1;
  1891  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1892  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  1893  01C9  170F               	bsf	15,6	;volatile
  1894                           
  1895                           ;OSC.c: 45:                 OSCCONbits.IRCF1=1;
  1896  01CA  168F               	bsf	15,5	;volatile
  1897                           
  1898                           ;OSC.c: 46:                 OSCCONbits.IRCF0=1;
  1899  01CB  160F               	bsf	15,4	;volatile
  1900                           
  1901                           ;OSC.c: 47:                 break;
  1902  01CC  29F5               	goto	l300
  1903  01CD                     l308:	
  1904                           ;OSC.c: 48:             default:
  1905                           
  1906                           
  1907                           ;OSC.c: 49:                 OSCCONbits.IRCF2=1;
  1908  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  1909  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  1910  01CF  170F               	bsf	15,6	;volatile
  1911                           
  1912                           ;OSC.c: 50:                 OSCCONbits.IRCF1=1;
  1913  01D0  168F               	bsf	15,5	;volatile
  1914                           
  1915                           ;OSC.c: 51:                 OSCCONbits.IRCF0=0;
  1916  01D1  120F               	bcf	15,4	;volatile
  1917                           
  1918                           ;OSC.c: 52:                 break;
  1919  01D2  29F5               	goto	l300
  1920  01D3                     l1327:
  1921  01D3  0875               	movf	initOsc@IRCF,w
  1922  01D4  00F3               	movwf	??_initOsc
  1923  01D5  01F4               	clrf	??_initOsc+1
  1924                           
  1925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1926                           ; Switch size 1, requested type "simple"
  1927                           ; Number of cases is 1, Range of values is 0 to 0
  1928                           ; switch strategies available:
  1929                           ; Name         Instructions Cycles
  1930                           ; simple_byte            4     3 (average)
  1931                           ; direct_byte           11     8 (fixed)
  1932                           ; jumptable            260     6 (fixed)
  1933                           ;	Chosen strategy is simple_byte
  1934  01D6  0874               	movf	??_initOsc+1,w
  1935  01D7  3A00               	xorlw	0	; case 0
  1936  01D8  1903               	skipnz
  1937  01D9  29DB               	goto	l1909
  1938  01DA  29CD               	goto	l308
  1939  01DB                     l1909:
  1940                           
  1941                           ; Switch size 1, requested type "simple"
  1942                           ; Number of cases is 8, Range of values is 0 to 7
  1943                           ; switch strategies available:
  1944                           ; Name         Instructions Cycles
  1945                           ; simple_byte           25    13 (average)
  1946                           ; direct_byte           32     8 (fixed)
  1947                           ; jumptable            260     6 (fixed)
  1948                           ;	Chosen strategy is simple_byte
  1949  01DB  0873               	movf	??_initOsc,w
  1950  01DC  3A00               	xorlw	0	; case 0
  1951  01DD  1903               	skipnz
  1952  01DE  299D               	goto	l299
  1953  01DF  3A01               	xorlw	1	; case 1
  1954  01E0  1903               	skipnz
  1955  01E1  29A3               	goto	l301
  1956  01E2  3A03               	xorlw	3	; case 2
  1957  01E3  1903               	skipnz
  1958  01E4  29A9               	goto	l302
  1959  01E5  3A01               	xorlw	1	; case 3
  1960  01E6  1903               	skipnz
  1961  01E7  29AF               	goto	l303
  1962  01E8  3A07               	xorlw	7	; case 4
  1963  01E9  1903               	skipnz
  1964  01EA  29B5               	goto	l304
  1965  01EB  3A01               	xorlw	1	; case 5
  1966  01EC  1903               	skipnz
  1967  01ED  29BB               	goto	l305
  1968  01EE  3A03               	xorlw	3	; case 6
  1969  01EF  1903               	skipnz
  1970  01F0  29C1               	goto	l306
  1971  01F1  3A01               	xorlw	1	; case 7
  1972  01F2  1903               	skipnz
  1973  01F3  29C7               	goto	l307
  1974  01F4  29CD               	goto	l308
  1975  01F5                     l300:
  1976                           
  1977                           ;OSC.c: 54: OSCCONbits.SCS = 1;
  1978  01F5  140F               	bsf	15,0	;volatile
  1979  01F6                     l309:
  1980  01F6  0008               	return
  1981  01F7                     __end_of_initOsc:
  1982                           
  1983                           	psect	text7
  1984  03D0                     __ptext7:	
  1985 ;; *************** function _TX *****************
  1986 ;; Defined at:
  1987 ;;		line 38 in file "UART.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    1
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_Setup
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function _TX
  2017  03D0                     _TX:
  2018  03D0                     l1335:	
  2019                           ;incstack = 0
  2020                           ; Regs used in _TX: [wreg+status,2]
  2021                           
  2022                           
  2023                           ;UART.c: 39:     TXSTAbits.SYNC=0;
  2024  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2025  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2026  03D2  1218               	bcf	24,4	;volatile
  2027                           
  2028                           ;UART.c: 40:     TXSTAbits.TXEN=1;
  2029  03D3  1698               	bsf	24,5	;volatile
  2030                           
  2031                           ;UART.c: 41:     TXSTAbits.BRGH=1;
  2032  03D4  1518               	bsf	24,2	;volatile
  2033                           
  2034                           ;UART.c: 42:     TXSTAbits.TX9=0;
  2035  03D5  1318               	bcf	24,6	;volatile
  2036                           
  2037                           ;UART.c: 43:     BAUDCTLbits.BRG16=0;
  2038  03D6  1683               	bsf	3,5	;RP0=1, select bank3
  2039  03D7  1703               	bsf	3,6	;RP1=1, select bank3
  2040  03D8  1187               	bcf	7,3	;volatile
  2041  03D9                     l1337:
  2042                           
  2043                           ;UART.c: 44:     SPBRG=25;
  2044  03D9  3019               	movlw	25
  2045  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2046  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2047  03DC  0099               	movwf	25	;volatile
  2048  03DD                     l1339:
  2049                           
  2050                           ;UART.c: 45:     SPBRGH=0;
  2051  03DD  019A               	clrf	26	;volatile
  2052  03DE                     l290:
  2053  03DE  0008               	return
  2054  03DF                     __end_of_TX:
  2055                           
  2056                           	psect	text8
  2057  03EC                     __ptext8:	
  2058 ;; *************** function _RX *****************
  2059 ;; Defined at:
  2060 ;;		line 48 in file "UART.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		None
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0
  2077 ;;      Totals:         0       0       0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    1
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_Setup
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _RX
  2090  03EC                     _RX:
  2091  03EC                     l1333:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _RX: []
  2094                           
  2095                           
  2096                           ;UART.c: 49:     RCSTAbits.SPEN=1;
  2097  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2098  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2099  03EE  1798               	bsf	24,7	;volatile
  2100                           
  2101                           ;UART.c: 50:     RCSTAbits.CREN=1;
  2102  03EF  1618               	bsf	24,4	;volatile
  2103                           
  2104                           ;UART.c: 51:     RCSTAbits.FERR=0;
  2105  03F0  1118               	bcf	24,2	;volatile
  2106                           
  2107                           ;UART.c: 52:     RCSTAbits.OERR=0;
  2108  03F1  1098               	bcf	24,1	;volatile
  2109                           
  2110                           ;UART.c: 53:     RCSTAbits.RX9=0;
  2111  03F2  1318               	bcf	24,6	;volatile
  2112                           
  2113                           ;UART.c: 54:     PIE1bits.RCIE=1;
  2114  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2115  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2116  03F5  168C               	bsf	12,5	;volatile
  2117  03F6                     l293:
  2118  03F6  0008               	return
  2119  03F7                     __end_of_RX:
  2120                           
  2121                           	psect	text9
  2122  03F7                     __ptext9:	
  2123 ;; *************** function _I2C_Master_Write *****************
  2124 ;; Defined at:
  2125 ;;		line 58 in file "I2C.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  d               2    3[COMMON] unsigned int 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2139 ;;      Params:         2       0       0       0       0
  2140 ;;      Locals:         0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0
  2142 ;;      Totals:         2       0       0       0       0
  2143 ;;Total ram usage:        2 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    2
  2146 ;; This function calls:
  2147 ;;		_I2C_Master_Wait
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _I2C_Master_Write
  2155  03F7                     _I2C_Master_Write:
  2156  03F7                     l1753:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2159                           
  2160                           
  2161                           ;I2C.c: 58: void I2C_Master_Write(unsigned d);I2C.c: 59: {;I2C.c: 60:     I2C_Master_Wai
      +                          t();
  2162  03F7  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2163  03FC                     l1755:
  2164                           
  2165                           ;I2C.c: 61:     SSPBUF = d;
  2166  03FC  0873               	movf	I2C_Master_Write@d,w
  2167  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2168  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2169  03FF  0093               	movwf	19	;volatile
  2170  0400                     l267:
  2171  0400  0008               	return
  2172  0401                     __end_of_I2C_Master_Write:
  2173                           
  2174                           	psect	text10
  2175  0401                     __ptext10:	
  2176 ;; *************** function _I2C_Master_Stop *****************
  2177 ;; Defined at:
  2178 ;;		line 48 in file "I2C.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, pclath, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0
  2195 ;;      Totals:         0       0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    2
  2199 ;; This function calls:
  2200 ;;		_I2C_Master_Wait
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _I2C_Master_Stop
  2208  0401                     _I2C_Master_Stop:
  2209  0401                     l1777:	
  2210                           ;incstack = 0
  2211                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2212                           
  2213                           
  2214                           ;I2C.c: 50:     I2C_Master_Wait();
  2215  0401  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2216  0406                     l1779:
  2217                           
  2218                           ;I2C.c: 51:     SSPCON2bits.PEN = 1;
  2219  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0407  1303               	bcf	3,6	;RP1=0, select bank1
  2221  0408  1511               	bsf	17,2	;volatile
  2222  0409                     l264:
  2223  0409  0008               	return
  2224  040A                     __end_of_I2C_Master_Stop:
  2225                           
  2226                           	psect	text11
  2227  040A                     __ptext11:	
  2228 ;; *************** function _I2C_Master_Start *****************
  2229 ;; Defined at:
  2230 ;;		line 32 in file "I2C.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    2
  2251 ;; This function calls:
  2252 ;;		_I2C_Master_Wait
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _I2C_Master_Start
  2260  040A                     _I2C_Master_Start:
  2261  040A                     l1749:	
  2262                           ;incstack = 0
  2263                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2264                           
  2265                           
  2266                           ;I2C.c: 34:     I2C_Master_Wait();
  2267  040A  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2268  040F                     l1751:
  2269                           
  2270                           ;I2C.c: 35:     SSPCON2bits.SEN = 1;
  2271  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2272  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2273  0411  1411               	bsf	17,0	;volatile
  2274  0412                     l258:
  2275  0412  0008               	return
  2276  0413                     __end_of_I2C_Master_Start:
  2277                           
  2278                           	psect	text12
  2279  0413                     __ptext12:	
  2280 ;; *************** function _I2C_Master_RepeatedStart *****************
  2281 ;; Defined at:
  2282 ;;		line 40 in file "I2C.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2, status,0, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2296 ;;      Params:         0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    2
  2303 ;; This function calls:
  2304 ;;		_I2C_Master_Wait
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           
  2311                           ;psect for function _I2C_Master_RepeatedStart
  2312  0413                     _I2C_Master_RepeatedStart:
  2313  0413                     l1757:	
  2314                           ;incstack = 0
  2315                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2316                           
  2317                           
  2318                           ;I2C.c: 42:     I2C_Master_Wait();
  2319  0413  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2320  0418                     l1759:
  2321                           
  2322                           ;I2C.c: 43:     SSPCON2bits.RSEN = 1;
  2323  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2324  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2325  041A  1491               	bsf	17,1	;volatile
  2326  041B                     l261:
  2327  041B  0008               	return
  2328  041C                     __end_of_I2C_Master_RepeatedStart:
  2329                           
  2330                           	psect	text13
  2331  037B                     __ptext13:	
  2332 ;; *************** function _I2C_Master_Read *****************
  2333 ;; Defined at:
  2334 ;;		line 67 in file "I2C.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  a               2    3[COMMON] unsigned short 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  temp            2    0[BANK0 ] unsigned short 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  2    3[COMMON] unsigned short 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         2       0       0       0       0
  2349 ;;      Locals:         0       2       0       0       0
  2350 ;;      Temps:          2       0       0       0       0
  2351 ;;      Totals:         4       2       0       0       0
  2352 ;;Total ram usage:        6 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    2
  2355 ;; This function calls:
  2356 ;;		_I2C_Master_Wait
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           
  2363                           ;psect for function _I2C_Master_Read
  2364  037B                     _I2C_Master_Read:
  2365  037B                     l1761:	
  2366                           ;incstack = 0
  2367                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2368                           
  2369                           
  2370                           ;I2C.c: 67: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 68: {;I2C.c: 69:    
      +                           unsigned short temp;;I2C.c: 70:     I2C_Master_Wait();
  2371  037B  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2372  0380                     l1763:
  2373                           
  2374                           ;I2C.c: 71:     SSPCON2bits.RCEN = 1;
  2375  0380  1683               	bsf	3,5	;RP0=1, select bank1
  2376  0381  1303               	bcf	3,6	;RP1=0, select bank1
  2377  0382  1591               	bsf	17,3	;volatile
  2378                           
  2379                           ;I2C.c: 72:     I2C_Master_Wait();
  2380  0383  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2381  0388                     l1765:
  2382                           
  2383                           ;I2C.c: 73:     temp = SSPBUF;
  2384  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2386  038A  0813               	movf	19,w	;volatile
  2387  038B  00F5               	movwf	??_I2C_Master_Read
  2388  038C  01F6               	clrf	??_I2C_Master_Read+1
  2389  038D  0875               	movf	??_I2C_Master_Read,w
  2390  038E  00BC               	movwf	I2C_Master_Read@temp
  2391  038F  0876               	movf	??_I2C_Master_Read+1,w
  2392  0390  00BD               	movwf	I2C_Master_Read@temp+1
  2393  0391                     l1767:
  2394                           
  2395                           ;I2C.c: 74:     I2C_Master_Wait();
  2396  0391  120A  118A  23DF  120A  118A  	fcall	_I2C_Master_Wait
  2397  0396                     l1769:
  2398                           
  2399                           ;I2C.c: 75:     if(a == 1){
  2400  0396  0373               	decf	I2C_Master_Read@a,w
  2401  0397  0474               	iorwf	I2C_Master_Read@a+1,w
  2402  0398  1D03               	btfss	3,2
  2403  0399  2B9B               	goto	u871
  2404  039A  2B9C               	goto	u870
  2405  039B                     u871:
  2406  039B  2BA0               	goto	l270
  2407  039C                     u870:
  2408  039C                     l1771:
  2409                           
  2410                           ;I2C.c: 76:         SSPCON2bits.ACKDT = 0;
  2411  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2412  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2413  039E  1291               	bcf	17,5	;volatile
  2414                           
  2415                           ;I2C.c: 77:     }else{
  2416  039F  2BA3               	goto	l271
  2417  03A0                     l270:
  2418                           
  2419                           ;I2C.c: 78:         SSPCON2bits.ACKDT = 1;
  2420  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2421  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2422  03A2  1691               	bsf	17,5	;volatile
  2423  03A3                     l271:	
  2424                           ;I2C.c: 79:     }
  2425                           
  2426                           
  2427                           ;I2C.c: 80:     SSPCON2bits.ACKEN = 1;
  2428  03A3  1611               	bsf	17,4	;volatile
  2429  03A4                     l1773:
  2430                           
  2431                           ;I2C.c: 81:     return temp;
  2432  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2433  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2434  03A6  083D               	movf	I2C_Master_Read@temp+1,w
  2435  03A7  00F4               	movwf	?_I2C_Master_Read+1
  2436  03A8  083C               	movf	I2C_Master_Read@temp,w
  2437  03A9  00F3               	movwf	?_I2C_Master_Read
  2438  03AA                     l272:
  2439  03AA  0008               	return
  2440  03AB                     __end_of_I2C_Master_Read:
  2441                           
  2442                           	psect	text14
  2443  03DF                     __ptext14:	
  2444 ;; *************** function _I2C_Master_Wait *****************
  2445 ;; Defined at:
  2446 ;;		line 25 in file "I2C.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2460 ;;      Params:         0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    1
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_I2C_Master_Start
  2471 ;;		_I2C_Master_RepeatedStart
  2472 ;;		_I2C_Master_Stop
  2473 ;;		_I2C_Master_Write
  2474 ;;		_I2C_Master_Read
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _I2C_Master_Wait
  2480  03DF                     _I2C_Master_Wait:
  2481  03DF                     l1707:	
  2482                           ;incstack = 0
  2483                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2484                           
  2485  03DF                     l252:	
  2486                           ;I2C.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2487                           
  2488  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2489  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  2490  03E1  1914               	btfsc	20,2	;volatile
  2491  03E2  2BE4               	goto	u771
  2492  03E3  2BE5               	goto	u770
  2493  03E4                     u771:
  2494  03E4  2BDF               	goto	l252
  2495  03E5                     u770:
  2496  03E5                     l1709:
  2497  03E5  0811               	movf	17,w	;volatile
  2498  03E6  391F               	andlw	31
  2499  03E7  1D03               	btfss	3,2
  2500  03E8  2BEA               	goto	u781
  2501  03E9  2BEB               	goto	u780
  2502  03EA                     u781:
  2503  03EA  2BDF               	goto	l252
  2504  03EB                     u780:
  2505  03EB                     l255:
  2506  03EB  0008               	return
  2507  03EC                     __end_of_I2C_Master_Wait:
  2508                           
  2509                           	psect	text15
  2510  0311                     __ptext15:	
  2511 ;; *************** function _I2C_Master_Init *****************
  2512 ;; Defined at:
  2513 ;;		line 9 in file "I2C.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  c               4   13[BANK0 ] const unsigned long 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2527 ;;      Params:         0       4       0       0       0
  2528 ;;      Locals:         0       0       0       0       0
  2529 ;;      Temps:          4       0       0       0       0
  2530 ;;      Totals:         4       4       0       0       0
  2531 ;;Total ram usage:        8 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    2
  2534 ;; This function calls:
  2535 ;;		___lldiv
  2536 ;; This function is called by:
  2537 ;;		_main
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function _I2C_Master_Init
  2543  0311                     _I2C_Master_Init:
  2544  0311                     l1737:	
  2545                           ;incstack = 0
  2546                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2547                           
  2548                           
  2549                           ;I2C.c: 9: void I2C_Master_Init(const unsigned long c);I2C.c: 10: {;I2C.c: 11:     SSPCO
      +                          N = 0b00101000;
  2550  0311  3028               	movlw	40
  2551  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0314  0094               	movwf	20	;volatile
  2554  0315                     l1739:
  2555                           
  2556                           ;I2C.c: 12:     SSPCON2 = 0;
  2557  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2559  0317  0191               	clrf	17	;volatile
  2560  0318                     l1741:
  2561                           
  2562                           ;I2C.c: 13:     SSPADD = (8000000/(4*c))-1;
  2563  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2564  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2565  031A  0849               	movf	I2C_Master_Init@c,w
  2566  031B  00F4               	movwf	??_I2C_Master_Init
  2567  031C  084A               	movf	I2C_Master_Init@c+1,w
  2568  031D  00F5               	movwf	??_I2C_Master_Init+1
  2569  031E  084B               	movf	I2C_Master_Init@c+2,w
  2570  031F  00F6               	movwf	??_I2C_Master_Init+2
  2571  0320  084C               	movf	I2C_Master_Init@c+3,w
  2572  0321  00F7               	movwf	??_I2C_Master_Init+3
  2573  0322  3002               	movlw	2
  2574  0323                     u865:
  2575  0323  1003               	clrc
  2576  0324  0DF4               	rlf	??_I2C_Master_Init,f
  2577  0325  0DF5               	rlf	??_I2C_Master_Init+1,f
  2578  0326  0DF6               	rlf	??_I2C_Master_Init+2,f
  2579  0327  0DF7               	rlf	??_I2C_Master_Init+3,f
  2580  0328                     u860:
  2581  0328  3EFF               	addlw	-1
  2582  0329  1D03               	skipz
  2583  032A  2B23               	goto	u865
  2584  032B  0877               	movf	??_I2C_Master_Init+3,w
  2585  032C  00BF               	movwf	___lldiv@divisor+3
  2586  032D  0876               	movf	??_I2C_Master_Init+2,w
  2587  032E  00BE               	movwf	___lldiv@divisor+2
  2588  032F  0875               	movf	??_I2C_Master_Init+1,w
  2589  0330  00BD               	movwf	___lldiv@divisor+1
  2590  0331  0874               	movf	??_I2C_Master_Init,w
  2591  0332  00BC               	movwf	___lldiv@divisor
  2592  0333  3000               	movlw	0
  2593  0334  00C3               	movwf	___lldiv@dividend+3
  2594  0335  307A               	movlw	122
  2595  0336  00C2               	movwf	___lldiv@dividend+2
  2596  0337  3012               	movlw	18
  2597  0338  00C1               	movwf	___lldiv@dividend+1
  2598  0339  3000               	movlw	0
  2599  033A  00C0               	movwf	___lldiv@dividend
  2600  033B  120A  118A  20D6  120A  118A  	fcall	___lldiv
  2601  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0342  083C               	movf	?___lldiv,w
  2604  0343  3EFF               	addlw	255
  2605  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2606  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2607  0346  0093               	movwf	19	;volatile
  2608  0347                     l1743:
  2609                           
  2610                           ;I2C.c: 14:     SSPSTAT = 0;
  2611  0347  0194               	clrf	20	;volatile
  2612  0348                     l1745:
  2613                           
  2614                           ;I2C.c: 15:     TRISCbits.TRISC3 = 1;
  2615  0348  1587               	bsf	7,3	;volatile
  2616  0349                     l1747:
  2617                           
  2618                           ;I2C.c: 16:     TRISCbits.TRISC4 = 1;
  2619  0349  1607               	bsf	7,4	;volatile
  2620  034A                     l249:
  2621  034A  0008               	return
  2622  034B                     __end_of_I2C_Master_Init:
  2623                           
  2624                           	psect	text16
  2625  00D6                     __ptext16:	
  2626 ;; *************** function ___lldiv *****************
  2627 ;; Defined at:
  2628 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  divisor         4    0[BANK0 ] unsigned long 
  2631 ;;  dividend        4    4[BANK0 ] unsigned long 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  quotient        4    8[BANK0 ] unsigned long 
  2634 ;;  counter         1   12[BANK0 ] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  4    0[BANK0 ] unsigned long 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, btemp+1
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2644 ;;      Params:         0       8       0       0       0
  2645 ;;      Locals:         0       5       0       0       0
  2646 ;;      Temps:          1       0       0       0       0
  2647 ;;      Totals:         1      13       0       0       0
  2648 ;;Total ram usage:       14 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    1
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_I2C_Master_Init
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           
  2659                           ;psect for function ___lldiv
  2660  00D6                     ___lldiv:
  2661  00D6                     l1711:	
  2662                           ;incstack = 0
  2663                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2664                           
  2665  00D6  3000               	movlw	0
  2666  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2667  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2668  00D9  00C7               	movwf	___lldiv@quotient+3
  2669  00DA  3000               	movlw	0
  2670  00DB  00C6               	movwf	___lldiv@quotient+2
  2671  00DC  3000               	movlw	0
  2672  00DD  00C5               	movwf	___lldiv@quotient+1
  2673  00DE  3000               	movlw	0
  2674  00DF  00C4               	movwf	___lldiv@quotient
  2675  00E0  083F               	movf	___lldiv@divisor+3,w
  2676  00E1  043E               	iorwf	___lldiv@divisor+2,w
  2677  00E2  043D               	iorwf	___lldiv@divisor+1,w
  2678  00E3  043C               	iorwf	___lldiv@divisor,w
  2679  00E4  1903               	skipnz
  2680  00E5  28E7               	goto	u791
  2681  00E6  28E8               	goto	u790
  2682  00E7                     u791:
  2683  00E7  2935               	goto	l1733
  2684  00E8                     u790:
  2685  00E8                     l1713:
  2686  00E8  01C8               	clrf	___lldiv@counter
  2687  00E9  0AC8               	incf	___lldiv@counter,f
  2688  00EA  28F8               	goto	l1719
  2689  00EB                     l1715:
  2690  00EB  3001               	movlw	1
  2691  00EC  00F3               	movwf	??___lldiv
  2692  00ED                     u805:
  2693  00ED  1003               	clrc
  2694  00EE  0DBC               	rlf	___lldiv@divisor,f
  2695  00EF  0DBD               	rlf	___lldiv@divisor+1,f
  2696  00F0  0DBE               	rlf	___lldiv@divisor+2,f
  2697  00F1  0DBF               	rlf	___lldiv@divisor+3,f
  2698  00F2  0BF3               	decfsz	??___lldiv,f
  2699  00F3  28ED               	goto	u805
  2700  00F4                     l1717:
  2701  00F4  3001               	movlw	1
  2702  00F5  00FF               	movwf	btemp+1
  2703  00F6  087F               	movf	btemp+1,w
  2704  00F7  07C8               	addwf	___lldiv@counter,f
  2705  00F8                     l1719:
  2706  00F8  1FBF               	btfss	___lldiv@divisor+3,7
  2707  00F9  28FB               	goto	u811
  2708  00FA  28FC               	goto	u810
  2709  00FB                     u811:
  2710  00FB  28EB               	goto	l1715
  2711  00FC                     u810:
  2712  00FC                     l1721:
  2713  00FC  3001               	movlw	1
  2714  00FD  00F3               	movwf	??___lldiv
  2715  00FE                     u825:
  2716  00FE  1003               	clrc
  2717  00FF  0DC4               	rlf	___lldiv@quotient,f
  2718  0100  0DC5               	rlf	___lldiv@quotient+1,f
  2719  0101  0DC6               	rlf	___lldiv@quotient+2,f
  2720  0102  0DC7               	rlf	___lldiv@quotient+3,f
  2721  0103  0BF3               	decfsz	??___lldiv,f
  2722  0104  28FE               	goto	u825
  2723  0105                     l1723:
  2724  0105  083F               	movf	___lldiv@divisor+3,w
  2725  0106  0243               	subwf	___lldiv@dividend+3,w
  2726  0107  1D03               	skipz
  2727  0108  2913               	goto	u835
  2728  0109  083E               	movf	___lldiv@divisor+2,w
  2729  010A  0242               	subwf	___lldiv@dividend+2,w
  2730  010B  1D03               	skipz
  2731  010C  2913               	goto	u835
  2732  010D  083D               	movf	___lldiv@divisor+1,w
  2733  010E  0241               	subwf	___lldiv@dividend+1,w
  2734  010F  1D03               	skipz
  2735  0110  2913               	goto	u835
  2736  0111  083C               	movf	___lldiv@divisor,w
  2737  0112  0240               	subwf	___lldiv@dividend,w
  2738  0113                     u835:
  2739  0113  1C03               	skipc
  2740  0114  2916               	goto	u831
  2741  0115  2917               	goto	u830
  2742  0116                     u831:
  2743  0116  2926               	goto	l1729
  2744  0117                     u830:
  2745  0117                     l1725:
  2746  0117  083C               	movf	___lldiv@divisor,w
  2747  0118  02C0               	subwf	___lldiv@dividend,f
  2748  0119  083D               	movf	___lldiv@divisor+1,w
  2749  011A  1C03               	skipc
  2750  011B  0F3D               	incfsz	___lldiv@divisor+1,w
  2751  011C  02C1               	subwf	___lldiv@dividend+1,f
  2752  011D  083E               	movf	___lldiv@divisor+2,w
  2753  011E  1C03               	skipc
  2754  011F  0F3E               	incfsz	___lldiv@divisor+2,w
  2755  0120  02C2               	subwf	___lldiv@dividend+2,f
  2756  0121  083F               	movf	___lldiv@divisor+3,w
  2757  0122  1C03               	skipc
  2758  0123  0F3F               	incfsz	___lldiv@divisor+3,w
  2759  0124  02C3               	subwf	___lldiv@dividend+3,f
  2760  0125                     l1727:
  2761  0125  1444               	bsf	___lldiv@quotient,0
  2762  0126                     l1729:
  2763  0126  3001               	movlw	1
  2764  0127                     u845:
  2765  0127  1003               	clrc
  2766  0128  0CBF               	rrf	___lldiv@divisor+3,f
  2767  0129  0CBE               	rrf	___lldiv@divisor+2,f
  2768  012A  0CBD               	rrf	___lldiv@divisor+1,f
  2769  012B  0CBC               	rrf	___lldiv@divisor,f
  2770  012C  3EFF               	addlw	-1
  2771  012D  1D03               	skipz
  2772  012E  2927               	goto	u845
  2773  012F                     l1731:
  2774  012F  3001               	movlw	1
  2775  0130  02C8               	subwf	___lldiv@counter,f
  2776  0131  1D03               	btfss	3,2
  2777  0132  2934               	goto	u851
  2778  0133  2935               	goto	u850
  2779  0134                     u851:
  2780  0134  28FC               	goto	l1721
  2781  0135                     u850:
  2782  0135                     l1733:
  2783  0135  0847               	movf	___lldiv@quotient+3,w
  2784  0136  00BF               	movwf	?___lldiv+3
  2785  0137  0846               	movf	___lldiv@quotient+2,w
  2786  0138  00BE               	movwf	?___lldiv+2
  2787  0139  0845               	movf	___lldiv@quotient+1,w
  2788  013A  00BD               	movwf	?___lldiv+1
  2789  013B  0844               	movf	___lldiv@quotient,w
  2790  013C  00BC               	movwf	?___lldiv
  2791  013D                     l431:
  2792  013D  0008               	return
  2793  013E                     __end_of___lldiv:
  2794                           
  2795                           	psect	text17
  2796  013E                     __ptext17:	
  2797 ;; *************** function _CONVET *****************
  2798 ;; Defined at:
  2799 ;;		line 140 in file "MCU.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0, btemp+1
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2813 ;;      Params:         0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0
  2815 ;;      Temps:          1       0       0       0       0
  2816 ;;      Totals:         1       0       0       0       0
  2817 ;;Total ram usage:        1 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _CONVET
  2829  013E                     _CONVET:
  2830  013E                     l1515:	
  2831                           ;incstack = 0
  2832                           ; Regs used in _CONVET: [wreg+status,2+status,0+btemp+1]
  2833                           
  2834                           
  2835                           ;MCU.c: 141:     mou_t = ((mou & 0b00010000)>>4);
  2836  013E  0879               	movf	_mou,w
  2837  013F  00F3               	movwf	??_CONVET
  2838  0140  3004               	movlw	4
  2839  0141                     u595:
  2840  0141  1003               	clrc
  2841  0142  0CF3               	rrf	??_CONVET,f
  2842  0143  3EFF               	addlw	-1
  2843  0144  1D03               	skipz
  2844  0145  2941               	goto	u595
  2845  0146  0873               	movf	??_CONVET,w
  2846  0147  3901               	andlw	1
  2847  0148  00FF               	movwf	btemp+1
  2848  0149  087F               	movf	btemp+1,w
  2849  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2850  014B  1303               	bcf	3,6	;RP1=0, select bank0
  2851  014C  00A5               	movwf	_mou_t
  2852  014D                     l1517:
  2853                           
  2854                           ;MCU.c: 142:     mou_u = (mou & 0b00001111);
  2855  014D  0879               	movf	_mou,w
  2856  014E  390F               	andlw	15
  2857  014F  00FF               	movwf	btemp+1
  2858  0150  087F               	movf	btemp+1,w
  2859  0151  00AA               	movwf	_mou_u
  2860  0152                     l1519:
  2861                           
  2862                           ;MCU.c: 143:     day_t = ((day & 0b00110000)>>4);
  2863  0152  0878               	movf	_day,w
  2864  0153  00F3               	movwf	??_CONVET
  2865  0154  3004               	movlw	4
  2866  0155                     u605:
  2867  0155  1003               	clrc
  2868  0156  0CF3               	rrf	??_CONVET,f
  2869  0157  3EFF               	addlw	-1
  2870  0158  1D03               	skipz
  2871  0159  2955               	goto	u605
  2872  015A  0873               	movf	??_CONVET,w
  2873  015B  3903               	andlw	3
  2874  015C  00FF               	movwf	btemp+1
  2875  015D  087F               	movf	btemp+1,w
  2876  015E  00A4               	movwf	_day_t
  2877                           
  2878                           ;MCU.c: 144:     day_u = (day & 0b00001111);
  2879  015F  0878               	movf	_day,w
  2880  0160  390F               	andlw	15
  2881  0161  00FF               	movwf	btemp+1
  2882  0162  087F               	movf	btemp+1,w
  2883  0163  00A9               	movwf	_day_u
  2884  0164                     l1521:
  2885                           
  2886                           ;MCU.c: 145:     hor_t = ((hor & 0b11000000)>>4);
  2887  0164  082F               	movf	_hor,w
  2888  0165  00F3               	movwf	??_CONVET
  2889  0166  3004               	movlw	4
  2890  0167                     u615:
  2891  0167  1003               	clrc
  2892  0168  0CF3               	rrf	??_CONVET,f
  2893  0169  3EFF               	addlw	-1
  2894  016A  1D03               	skipz
  2895  016B  2967               	goto	u615
  2896  016C  0873               	movf	??_CONVET,w
  2897  016D  390C               	andlw	12
  2898  016E  00FF               	movwf	btemp+1
  2899  016F  087F               	movf	btemp+1,w
  2900  0170  00A3               	movwf	_hor_t
  2901  0171                     l1523:
  2902                           
  2903                           ;MCU.c: 146:     hor_u = (hor & 0b00000011);
  2904  0171  082F               	movf	_hor,w
  2905  0172  3903               	andlw	3
  2906  0173  00FF               	movwf	btemp+1
  2907  0174  087F               	movf	btemp+1,w
  2908  0175  00A8               	movwf	_hor_u
  2909                           
  2910                           ;MCU.c: 147:     min_t = ((min & 0b01110000)>>4);
  2911  0176  082E               	movf	_min,w
  2912  0177  00F3               	movwf	??_CONVET
  2913  0178  3004               	movlw	4
  2914  0179                     u625:
  2915  0179  1003               	clrc
  2916  017A  0CF3               	rrf	??_CONVET,f
  2917  017B  3EFF               	addlw	-1
  2918  017C  1D03               	skipz
  2919  017D  2979               	goto	u625
  2920  017E  0873               	movf	??_CONVET,w
  2921  017F  3907               	andlw	7
  2922  0180  00FF               	movwf	btemp+1
  2923  0181  087F               	movf	btemp+1,w
  2924  0182  00A2               	movwf	_min_t
  2925  0183                     l1525:
  2926                           
  2927                           ;MCU.c: 148:     min_u = (min & 0b00001111);
  2928  0183  082E               	movf	_min,w
  2929  0184  390F               	andlw	15
  2930  0185  00FF               	movwf	btemp+1
  2931  0186  087F               	movf	btemp+1,w
  2932  0187  00A7               	movwf	_min_u
  2933  0188                     l1527:
  2934                           
  2935                           ;MCU.c: 149:     seg_t = ((seg & 0b01110000)>>4);
  2936  0188  082D               	movf	_seg,w
  2937  0189  00F3               	movwf	??_CONVET
  2938  018A  3004               	movlw	4
  2939  018B                     u635:
  2940  018B  1003               	clrc
  2941  018C  0CF3               	rrf	??_CONVET,f
  2942  018D  3EFF               	addlw	-1
  2943  018E  1D03               	skipz
  2944  018F  298B               	goto	u635
  2945  0190  0873               	movf	??_CONVET,w
  2946  0191  3907               	andlw	7
  2947  0192  00FF               	movwf	btemp+1
  2948  0193  087F               	movf	btemp+1,w
  2949  0194  00A1               	movwf	_seg_t
  2950                           
  2951                           ;MCU.c: 150:     seg_u = (seg & 0b00001111);
  2952  0195  082D               	movf	_seg,w
  2953  0196  390F               	andlw	15
  2954  0197  00FF               	movwf	btemp+1
  2955  0198  087F               	movf	btemp+1,w
  2956  0199  00A6               	movwf	_seg_u
  2957  019A                     l163:
  2958  019A  0008               	return
  2959  019B                     __end_of_CONVET:
  2960                           
  2961                           	psect	text18
  2962  01F7                     __ptext18:	
  2963 ;; *************** function _isr *****************
  2964 ;; Defined at:
  2965 ;;		line 48 in file "MCU.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, btemp+1
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0
  2981 ;;      Temps:          3       0       0       0       0
  2982 ;;      Totals:         3       0       0       0       0
  2983 ;;Total ram usage:        3 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		Interrupt level 1
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _isr
  2994  01F7                     _isr:
  2995  01F7                     i1l1541:
  2996                           
  2997                           ;MCU.c: 49:     if (PIR1bits.RCIF==1){
  2998  01F7  1E8C               	btfss	12,5	;volatile
  2999  01F8  29FA               	goto	u67_21
  3000  01F9  29FB               	goto	u67_20
  3001  01FA                     u67_21:
  3002  01FA  2A34               	goto	i1l139
  3003  01FB                     u67_20:
  3004  01FB                     i1l1543:
  3005                           
  3006                           ;MCU.c: 50:         temp = 0;
  3007  01FB  01FA               	clrf	_temp
  3008  01FC                     i1l1545:
  3009                           
  3010                           ;MCU.c: 51:         temp = RCREG;
  3011  01FC  081A               	movf	26,w	;volatile
  3012  01FD  00FF               	movwf	btemp+1
  3013  01FE  087F               	movf	btemp+1,w
  3014  01FF  00FA               	movwf	_temp
  3015  0200                     i1l1547:
  3016                           
  3017                           ;MCU.c: 52:         if (temp == 0X30){PORTAbits.RA0=0;}
  3018  0200  3030               	movlw	48
  3019  0201  067A               	xorwf	_temp,w
  3020  0202  1D03               	btfss	3,2
  3021  0203  2A05               	goto	u68_21
  3022  0204  2A06               	goto	u68_20
  3023  0205                     u68_21:
  3024  0205  2A07               	goto	i1l1551
  3025  0206                     u68_20:
  3026  0206                     i1l1549:
  3027  0206  1005               	bcf	5,0	;volatile
  3028  0207                     i1l1551:
  3029                           
  3030                           ;MCU.c: 53:         if (temp == 0X31){PORTAbits.RA0=1;}
  3031  0207  3031               	movlw	49
  3032  0208  067A               	xorwf	_temp,w
  3033  0209  1D03               	btfss	3,2
  3034  020A  2A0C               	goto	u69_21
  3035  020B  2A0D               	goto	u69_20
  3036  020C                     u69_21:
  3037  020C  2A0E               	goto	i1l1555
  3038  020D                     u69_20:
  3039  020D                     i1l1553:
  3040  020D  1405               	bsf	5,0	;volatile
  3041  020E                     i1l1555:
  3042                           
  3043                           ;MCU.c: 54:         if (temp == 0X32){PORTAbits.RA1=0;}
  3044  020E  3032               	movlw	50
  3045  020F  067A               	xorwf	_temp,w
  3046  0210  1D03               	btfss	3,2
  3047  0211  2A13               	goto	u70_21
  3048  0212  2A14               	goto	u70_20
  3049  0213                     u70_21:
  3050  0213  2A15               	goto	i1l1559
  3051  0214                     u70_20:
  3052  0214                     i1l1557:
  3053  0214  1085               	bcf	5,1	;volatile
  3054  0215                     i1l1559:
  3055                           
  3056                           ;MCU.c: 55:         if (temp == 0X33){PORTAbits.RA1=1;}
  3057  0215  3033               	movlw	51
  3058  0216  067A               	xorwf	_temp,w
  3059  0217  1D03               	btfss	3,2
  3060  0218  2A1A               	goto	u71_21
  3061  0219  2A1B               	goto	u71_20
  3062  021A                     u71_21:
  3063  021A  2A1C               	goto	i1l1563
  3064  021B                     u71_20:
  3065  021B                     i1l1561:
  3066  021B  1485               	bsf	5,1	;volatile
  3067  021C                     i1l1563:
  3068                           
  3069                           ;MCU.c: 56:         if (temp == 0X34){C=1;}
  3070  021C  3034               	movlw	52
  3071  021D  067A               	xorwf	_temp,w
  3072  021E  1D03               	btfss	3,2
  3073  021F  2A21               	goto	u72_21
  3074  0220  2A22               	goto	u72_20
  3075  0221                     u72_21:
  3076  0221  2A24               	goto	i1l1567
  3077  0222                     u72_20:
  3078  0222                     i1l1565:
  3079  0222  01B7               	clrf	_C
  3080  0223  0AB7               	incf	_C,f
  3081  0224                     i1l1567:
  3082                           
  3083                           ;MCU.c: 57:         if (temp == 0X35){b=1;}
  3084  0224  3035               	movlw	53
  3085  0225  067A               	xorwf	_temp,w
  3086  0226  1D03               	btfss	3,2
  3087  0227  2A29               	goto	u73_21
  3088  0228  2A2A               	goto	u73_20
  3089  0229                     u73_21:
  3090  0229  2A2C               	goto	i1l1571
  3091  022A                     u73_20:
  3092  022A                     i1l1569:
  3093  022A  01B1               	clrf	_b
  3094  022B  0AB1               	incf	_b,f
  3095  022C                     i1l1571:
  3096                           
  3097                           ;MCU.c: 58:         if (temp == 0X36){g=1;}
  3098  022C  3036               	movlw	54
  3099  022D  067A               	xorwf	_temp,w
  3100  022E  1D03               	btfss	3,2
  3101  022F  2A31               	goto	u74_21
  3102  0230  2A32               	goto	u74_20
  3103  0231                     u74_21:
  3104  0231  2A34               	goto	i1l139
  3105  0232                     u74_20:
  3106  0232                     i1l1573:
  3107  0232  01B0               	clrf	_g
  3108  0233  0AB0               	incf	_g,f
  3109  0234                     i1l139:	
  3110                           ;MCU.c: 59:     }
  3111                           
  3112                           
  3113                           ;MCU.c: 60:     if (INTCONbits.TMR0IF==1){
  3114  0234  1D0B               	btfss	11,2	;volatile
  3115  0235  2A37               	goto	u75_21
  3116  0236  2A38               	goto	u75_20
  3117  0237                     u75_21:
  3118  0237  2A46               	goto	i1l149
  3119  0238                     u75_20:
  3120  0238                     i1l1575:
  3121                           
  3122                           ;MCU.c: 61:         TMR0=236;
  3123  0238  30EC               	movlw	236
  3124  0239  0081               	movwf	1	;volatile
  3125  023A                     i1l1577:
  3126                           
  3127                           ;MCU.c: 62:         INTCONbits.TMR0IF=0;
  3128  023A  110B               	bcf	11,2	;volatile
  3129  023B                     i1l1579:
  3130                           
  3131                           ;MCU.c: 63:         r++;
  3132  023B  3001               	movlw	1
  3133  023C  00FF               	movwf	btemp+1
  3134  023D  087F               	movf	btemp+1,w
  3135  023E  07B8               	addwf	_r,f
  3136  023F                     i1l1581:
  3137                           
  3138                           ;MCU.c: 64:         if(r==10){
  3139  023F  300A               	movlw	10
  3140  0240  0638               	xorwf	_r,w
  3141  0241  1D03               	btfss	3,2
  3142  0242  2A44               	goto	u76_21
  3143  0243  2A45               	goto	u76_20
  3144  0244                     u76_21:
  3145  0244  2A46               	goto	i1l149
  3146  0245                     u76_20:
  3147  0245                     i1l1583:
  3148                           
  3149                           ;MCU.c: 65:             r=0;
  3150  0245  01B8               	clrf	_r
  3151  0246                     i1l149:
  3152  0246  0872               	movf	??_isr+2,w
  3153  0247  00FF               	movwf	btemp+1
  3154  0248  0871               	movf	??_isr+1,w
  3155  0249  008A               	movwf	10
  3156  024A  0E70               	swapf	??_isr^(0+4294967168),w
  3157  024B  0083               	movwf	3
  3158  024C  0EFE               	swapf	btemp,f
  3159  024D  0E7E               	swapf	btemp,w
  3160  024E  0009               	retfie
  3161  024F                     __end_of_isr:
  3162  007E                     btemp	set	126	;btemp
  3163  007E                     wtemp0	set	126
  3164                           
  3165                           	psect	intentry
  3166  0004                     __pintentry:	
  3167                           ;incstack = 0
  3168                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
  3169                           
  3170  0004                     interrupt_function:
  3171  007E                     saved_w	set	btemp
  3172  0004  00FE               	movwf	btemp
  3173  0005  0E03               	swapf	3,w
  3174  0006  00F0               	movwf	??_isr
  3175  0007  080A               	movf	10,w
  3176  0008  00F1               	movwf	??_isr+1
  3177  0009  1283               	bcf	3,5	;RP0=0, select bank0
  3178  000A  1303               	bcf	3,6	;RP1=0, select bank0
  3179  000B  087F               	movf	btemp+1,w
  3180  000C  00F2               	movwf	??_isr+2
  3181  000D  120A  118A  29F7   	ljmp	_isr
  3182                           
  3183                           	psect	config
  3184                           
  3185                           ;Config register CONFIG1 @ 0x2007
  3186                           ;	Oscillator Selection bits
  3187                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3188                           ;	Watchdog Timer Enable bit
  3189                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3190                           ;	Power-up Timer Enable bit
  3191                           ;	PWRTE = OFF, PWRT disabled
  3192                           ;	RE3/MCLR pin function select bit
  3193                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3194                           ;	Code Protection bit
  3195                           ;	CP = OFF, Program memory code protection is disabled
  3196                           ;	Data Code Protection bit
  3197                           ;	CPD = OFF, Data memory code protection is disabled
  3198                           ;	Brown Out Reset Selection bits
  3199                           ;	BOREN = OFF, BOR disabled
  3200                           ;	Internal External Switchover bit
  3201                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3202                           ;	Fail-Safe Clock Monitor Enabled bit
  3203                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3204                           ;	Low Voltage Programming Enable bit
  3205                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3206                           ;	In-Circuit Debugger Mode bit
  3207                           ;	DEBUG = 0x1, unprogrammed default
  3208  2007                     	org	8199
  3209  2007  20D4               	dw	8404
  3210                           
  3211                           ;Config register CONFIG2 @ 0x2008
  3212                           ;	Brown-out Reset Selection bit
  3213                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3214                           ;	Flash Program Memory Self Write Enable bits
  3215                           ;	WRT = OFF, Write protection off
  3216  2008                     	org	8200
  3217  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     17      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Master_Init
    _first_send->_send_hora
    _first_send->_send_min
    _first_send->_send_seg
    _Setup->_initOsc
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1560
                             _CONVET
                    _I2C_Master_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _Setup
                         _first_send
 ---------------------------------------------------------------------------------
 (1) _first_send                                           0     0      0       0
                          _send_hora
                           _send_min
                           _send_seg
 ---------------------------------------------------------------------------------
 (2) _send_seg                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_min                                             2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _send_hora                                            2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      22
                                 _RX
                                 _TX
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TX                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RX                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     301
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _CONVET                                               1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVET
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Setup
     _RX
     _TX
     _initOsc
   _first_send
     _send_hora
     _send_min
     _send_seg

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Mar 12 22:15:39 2021

                                _C 0037                                  _L 003B  
                                _M 0032                                  _Z 003A  
                                _b 0031                                  _g 0030  
                                _h 0035                                  _m 0034  
                                _q 0036                                  _r 0038  
                                _s 0033                                  _z 0039  
                               _RX 03EC                                 _TX 03D0  
                               fsr 0004                                ?_RX 0070  
                              ?_TX 0070                                l200 02B2  
                              l203 02D2                                l300 01F5  
                              l220 0294                                l301 01A3  
                              l213 0263                                l302 01A9  
                              l303 01AF                                l304 01B5  
                              l160 037A                                l208 0253  
                              l305 01BB                                l217 0274  
                              l306 01C1                                l163 019A  
                              l307 01C7                                l252 03DF  
                              l308 01CD                                l261 041B  
                              l309 01F6                                l270 03A0  
                              l174 02D7                                l431 013D  
                              l255 03EB                                l271 03A3  
                              l183 02F0                                l191 0299  
                              l272 03AA                                l264 0409  
                              l249 034A                                l169 03CF  
                              l258 0412                                l290 03DE  
                              l186 0310                                l267 0400  
                              l179 02E7                                l196 02A9  
                              l293 03F6                                l299 019D  
                              _GIE 005F                                u400 0269  
                              u401 0268                                u410 027A  
                              u411 0279                                u420 029F  
                              u421 029E                                u430 02AF  
                              u431 02AE                                u440 02B8  
                              u441 02B7                                u450 02DD  
                              u451 02DC                                u460 02ED  
                              u605 0155                                u461 02EC  
                              u470 02F6                                u390 0259  
                              u615 0167                                u471 02F5  
                              u391 0258                                u640 03B2  
                              u625 0179                                u641 03B1  
                              u810 00FC                                u650 03BE  
                              u635 018B                                u811 00FB  
                              u651 03BD                                u660 03CA  
                              u805 00ED                                u661 03C9  
                              u830 0117                                u831 0116  
                              u825 00FE                                u850 0135  
                              u770 03E5                                u595 0141  
                              u851 0134                                u835 0113  
                              u771 03E4                                u860 0328  
                              u780 03EB                                u845 0127  
                              u781 03EA                                u790 00E8  
                              u870 039C                                u791 00E7  
                              u871 039B                                u865 0323  
                              _day 0078                                _hor 002F  
                              _min 002E                                _isr 01F7  
                              _seg 002D                                _mou 0079  
                              indf 0000                               ??_RX 0073  
                             ??_TX 0073                               l1401 02F6  
                             l1323 019C                               l1333 03EC  
                             l1405 02FB                               l1341 024F  
                             l1335 03D0                               l1327 01D3  
                             l1351 026F                               l1343 0250  
                             l1521 0164                               l1337 03D9  
                             l1441 034B                               l1353 0270  
                             l1345 0259                               l1361 027F  
                             l1523 0171                               l1515 013E  
                             l1339 03DD                               l1451 0361  
                             l1443 035D                               l1371 029F  
                             l1355 0272                               l1347 0260  
                             l1531 03B2                               l1525 0183  
                             l1517 014D                               l1461 0368  
                             l1453 0364                               l1445 035E  
                             l1373 02A6                               l1357 027A  
                             l1349 0269                               l1533 03B7  
                             l1527 0188                               l1519 0152  
                             l1711 00D6                               l1463 0369  
                             l1455 0365                               l1447 035F  
                             l1391 02D4                               l1383 02BD  
                             l1367 0295                               l1535 03BE  
                             l1721 00FC                               l1713 00E8  
                             l1465 036A                               l1457 0366  
                             l1449 0360                               l1393 02DD  
                             l1377 02B0                               l1369 0296  
                             l1537 03C3                               l1529 03AB  
                             l1801 0056                               l1731 012F  
                             l1723 0105                               l1715 00EB  
                             l1707 03DF                               l1467 0370  
                             l1459 0367                               l1395 02E4  
                             l1379 02B8                               l1539 03CA  
                             l1811 009B                               l1803 005F  
                             l1725 0117                               l1717 00F4  
                             l1733 0135                               l1741 0318  
                             l1709 03E5                               l1469 0375  
                             l1389 02D3                               l1821 00CD  
                             l1813 00A8                               l1805 006E  
                             l1727 0125                               l1719 00F8  
                             l1743 0347                               l1751 040F  
                             l1399 02EE                               l1903 0289  
                             l1815 00B5                               l1807 007D  
                             l1729 0126                               l1745 0348  
                             l1737 0311                               l1761 037B  
                             l1753 03F7                               l1905 02C7  
                             l1817 00C3                               l1809 008C  
                             l1747 0349                               l1739 0315  
                             l1771 039C                               l1763 0380  
                             l1755 03FC                               l1907 0305  
                             l1819 00C8                               l1773 03A4  
                             l1765 0388                               l1757 0413  
                             l1749 040A                               l1909 01DB  
                             l1781 0023                               l1767 0391  
                             l1759 0418                               l1791 002E  
                             l1783 0028                               l1769 0396  
                             l1777 0401                               l1793 003B  
                             l1785 002B                               l1779 0406  
                             l1795 0040                               l1787 002C  
                             l1797 0049                               l1789 002D  
                             l1799 0051                               ?_isr 0070  
                             _PEIE 005E                               _TMR0 0001  
 __end_of_I2C_Master_RepeatedStart 041C                               _main 0023  
                             _temp 007A                               _week 002C  
                             _year 002B                               btemp 007E  
                             start 0010                              ??_isr 0070  
                 ?_I2C_Master_Init 0049                   ?_I2C_Master_Read 0073  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                              _ANSEL 0188  
                  __end_of___lldiv 013E                              i1l139 0234  
                            i1l149 0246                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u70_20 0214                              u70_21 0213  
                            u71_20 021B                              u71_21 021A  
                            u72_20 0222                              u72_21 0221  
                            u73_20 022A                              u73_21 0229  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            u74_20 0232                              _SSPIF 0063  
                            u74_21 0231                              u75_20 0238  
                            u67_20 01FB                              u75_21 0237  
                            u67_21 01FA                              u76_20 0245  
                            u68_20 0206                              u76_21 0244  
                            u68_21 0205                              u69_20 020D  
                            u69_21 020C                              _TXREG 0019  
                            _Setup 034B                              _day_t 0024  
                            _day_u 0029                    __end_of_initOsc 01F7  
                            _hor_t 0023                              _hor_u 0028  
                            _min_t 0022                              _min_u 0027  
                            _seg_t 0021                              _seg_u 0026  
                            _mou_t 0025                              _mou_u 002A  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 0013  
                     __end_of_main 00D6                             ??_main 0078  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
                           ?_Setup 0070                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                        initOsc@IRCF 0075  
                           _ANSELH 0189                             _CONVET 013E  
                           i1l1541 01F7                             i1l1551 0207  
                           i1l1543 01FB                             i1l1561 021B  
                           i1l1553 020D                             i1l1545 01FC  
                           i1l1571 022C                             i1l1563 021C  
                           i1l1555 020E                             i1l1547 0200  
                           i1l1581 023F                             i1l1573 0232  
                           i1l1565 0222                             i1l1557 0214  
                           i1l1549 0206                             i1l1583 0245  
                           i1l1575 0238                             i1l1567 0224  
                           i1l1559 0215                             i1l1577 023A  
                           i1l1569 022A                             i1l1579 023B  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0413                          ??___lldiv 0073  
                 __end_of_send_min 02D3                   __end_of_send_seg 0295  
                        ??_initOsc 0073                             saved_w 007E  
          __end_of__initialization 001F                     __pcstackCOMMON 0070  
                    __end_of_Setup 037B                         __end_of_RX 03F7  
                       __end_of_TX 03DF                     _OPTION_REGbits 0081  
                          ??_Setup 0076                            ?_CONVET 0070  
                       __pbssBANK0 0020                         __pmaintext 0023  
                       __pintentry 0004                 __size_of_send_hora 003E  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                  __size_of_CONVET 005D                         _first_send 03AB  
                        ?_send_min 0070                          ?_send_seg 0070  
                          ___lldiv 00D6                            __ptext1 03AB  
                          __ptext2 024F                            __ptext3 0295  
                          __ptext4 02D3                            __ptext5 034B  
                          __ptext6 019B                            __ptext7 03D0  
                          __ptext8 03EC                            __ptext9 03F7  
                          _initOsc 019B                       __size_of_isr 0058  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 0030  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
                          clrloop0 041D               end_of_initialization 001F  
       ??_I2C_Master_RepeatedStart 0073                  __end_of_send_hora 0311  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 003C                         ??_send_min 0073  
                       ??_send_seg 0073                    ___lldiv@counter 0048  
                        _RCSTAbits 0018                   I2C_Master_Init@c 0049  
                 I2C_Master_Read@a 0073                          _PORTAbits 0005  
                        _TRISCbits 0087                     __end_of_CONVET 019B  
                        _TXSTAbits 0098                        ?_first_send 0070  
                      _BAUDCTLbits 0187                start_initialization 0013  
                      __end_of_isr 024F                           ??_CONVET 0073  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                      __pbssCOMMON 0078                          ___latbits 0002  
              __size_of_first_send 0025                      __pcstackBANK0 003C  
                 _I2C_Master_Start 040A                   _I2C_Master_Write 03F7  
                __size_of_send_min 003E                  __size_of_send_seg 0046  
                         ?___lldiv 003C                           ?_initOsc 0070  
                   __size_of_Setup 0030                        __size_of_RX 000B  
                      __size_of_TX 000F                  interrupt_function 0004  
                        clear_ram0 041C                           _PIE1bits 008C  
                        _send_hora 02D3                           _PIR1bits 000C  
              I2C_Master_Read@temp 003C                       ??_first_send 0075  
                       ?_send_hora 0070  __size_of_I2C_Master_RepeatedStart 0009  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                  _I2C_Master_Init 0311                    _I2C_Master_Read 037B  
                  _I2C_Master_Wait 03DF                    _I2C_Master_Stop 0401  
                 __size_of_initOsc 005C                 __end_of_first_send 03D0  
                         __ptext10 0401                           __ptext11 040A  
                         __ptext12 0413                           __ptext13 037B  
                         __ptext14 03DF                           __ptext15 0311  
                         __ptext16 00D6                           __ptext17 013E  
                         __ptext18 01F7                      __size_of_main 00B3  
                         _send_min 0295                           _send_seg 024F  
                         _segundos 0020           __end_of_I2C_Master_Start 0413  
         __end_of_I2C_Master_Write 0401                         _INTCONbits 000B  
                         intlevel1 0000                   ___lldiv@dividend 0040  
                      ??_send_hora 0073                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 034B            __end_of_I2C_Master_Read 03AB  
          __end_of_I2C_Master_Wait 03EC            __end_of_I2C_Master_Stop 040A  
                 ___lldiv@quotient 0044                  I2C_Master_Write@d 0073  
                      _SSPCON2bits 0091  
